Familiarising with IDE,,,Predictable (3),Effective (4),Satisfaction (3),Trust (1),Efficient (1),Vector: ,Invoke (5),Row Range, Predictable (1), Effective (0), Satisfaction (0), Trust (1), Efficient (0),Not Predictable (2),Not Effective (4),Not Satisfaction (3),Not Trust (0),Not Efficient (1),Refactorings
T1 [04:39],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So we just want to create a new testclass and - these into it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Wondering what I should call this,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
StringUtils [05:56],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think I need to better understand what is really in this class before I can choose a name.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So I'm moving the tests about empty and blank [06:32],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I feel like these tests are in the right class, and the others are not.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you are disagreeing with the task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It amounts to the same. These tests are testing empty, and these others are testing strip. Here one is testing trim as well. So it feels like this grouping is a little strange. [07:26]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Wait a second. I did not read this carefully enough. So we want to group all of these together. That makes more sense.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
TestIsAnyEmpty [07:57],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so I'm just going to follow the directions.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you plan to do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll create a new class. I'll call it StringUtilsEmptyOrBlankTest [08:35],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And now I'm wondering if I can actually use the outline view to move stuff. [08:41],,Named (Move),0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you do that in eclipse?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I sometimes use the package explorer in eclipse to move methods. You can see them nested there. So I guess it should work here. But I've bever tried this in intelliJ. [09:12],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's start with the first two.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I can multiselect?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Cmd,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Then I would drag these here. It's not going to work is it. Can I cut them? [09:47],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you wanted to cut these and paste them into the class?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That's what I want to do. But you can only copy. [10:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Looks like I can't move them either. [10:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It seems like the easiest thing is just to do it manually. I wouldn't be surprised if there was a better way. [10:48],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why were you inclined to use the tooling originally?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I thought it would be faster. It is importing stuff automatically, that's nice.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And what made you decide to abandon it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I spent a couple of minutes and didn't get it working. I decided it is faster to do manually. If I were to spend a lot of time doing this I may investigate how to do it. [11:35],"Reflection
Not Efficient (“I decided it is faster to do manually.”)
",,0,0,0,0,1,"<0,0,0,0,1>",0,30-30,0,0,0,0,0,0,0,0,0,1,
I: Did you compare it to the time you thought the task would take?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Not explicitly, but I thought the task wouldn't take very long. Also the fact that I couldn't do it made me think that the tooling doesn't support it. I tried a couple of different approaches and couldn't get them to work. [12:04]","Reflection
Not Effective (“the fact that I couldn't do it made me think that the tooling doesn't support it.”)
",,0,1,0,0,0,"<0,1,0,0,0>",0,32-32,0,0,0,0,0,0,1,0,0,0,
So this says testIsNoneEmpty. I guess a disadvantage of how I'm doing it is that it is more likely I'll do it wrong.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you think can go wrong?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I can move the wrong methods or not all the ones I think I'm moving.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Why is it already defined?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Apparently I did not actually copy them. [13:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
wait what,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm not sure what is going on,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I cut them, and paste them in here.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't know what happened there. The first time I cut them and pasted what I previously copied and I've no idea how that happened. [15:00],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That's it for stringutilstest. Now it's stringUtilsTrimEmptyTest,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There we have (list of methods).,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And I will have the context of that [15:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Oh i don't,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What context were you expecting?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I was expecting these to have the same as those but they don't.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So what's interesting, since I did it manually is there are these comments separating it from the file. Guess I should remove that. If I used the tool I wouldn't notice I guess. [16:32]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Guess I duplicated those. That was from when I pasted the wrong thing. Sanity check: I should have 12 methods, and I do. [17:09]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And I should be able to run this.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: For the second class you did not try to use the tool at all, how come?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I was doing the same thing and I had already decided it wouldn't work.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Cannot resolve symbol foo,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So we have this constant defined here. I copy this. [18:32],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
The tests pass so I guess I'm done.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I located the methods that I wanted to move, and I had to figure out what to call the class I was moving them to, and it seemed the common thing with them was that they were all testing for empty or blank so I named the class accordingly, and I cut and pasted them into the class. I tried to run the tests but there were compilation errors, so I found that there was a constant needed and I copied that there. I considered defining the constant somewhere else where it could be shared, but since it was just a constant foo it didn't see wort it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tools that could have automated these steps?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm pretty sure in eclipse you can drag-and-drop methods in package explorer, so that's what I would have done if I was in eclipse. [19:56]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you expect that to handle this constant issue.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't think it would do any better than what happened here. I would get an error and would have to manually fix it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you have preferred that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I don't think specifically for this, but sometimes in eclipse when you do refactorings, you get a dialogue with errors, which is nice - although most of the time I ignore it anyway, because I know that I am going to resolve the error in some other way. [20:45]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you ignore the errors, do they show up as compilation errors or do you have to remember them?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"There may be cases where they wouldn't show up, for example with name shadowing, then you'd have to know what happened, but most of the time it's fine.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So do you usually read it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I usually skim it. It depends - sometimes there's three and sometimes a houndred. If there's a hundred then I'm probably not going to read them all.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you usually cancel or proceed?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I usually proceed. [21:53],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
One thing about what I did here is that I didn't spend much effort at understanding the difference between these two classes which I maybe should have done.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why do you think you should have done that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It may have informed how I named the class I moved them to. It may have told me about other constraints I should have considered. I guess part of what I'm doing when doing a task like this is evaluating whether the task makes sense.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You changed strategy at some point early on. What happened there?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess I didn't think much when I started. When I got to the point I was prompted for a name I realised I didn't know what I was going to call it. I was planning to call it this name, but it was already used. The prompt for information made me think harder about what I was doing which made me understand it better [23:20]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Any changes you're unsure if you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No. However, I did not look over what I've done carefully. If I was going to commit this code I would probably look at a diff of what I've done to make sure I'm happy with it. And I think I relied a fair bit on intuition. I did not try to get a deep understanding of what the code was doing before making changes. That work 90% of the time, but the other 10% it's wrong. Depending on how important this is, I may try to get that deeper understanding before committing this. [24:18]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you usually use your diff to check what you have done?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes. Here we use code review which creates a diff.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Does that mean you would have worked differently if you did not have that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Not really. I always want to know, before I commit my code, what am I actually committing. Make sure I don't include somethign I didn't mean to include. Just sort of do a sanity check.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
T2.[25:08] Reading task. [25:48],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
check if it's empty return false.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"check the array is empty return false. Otherwise if any one is empty, return true. So this is .. we also have isAllEmpty. And how is that implemented. Just a negation of that. [26:24]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think what I would do is reimplement is all empty, and have isAnyEmpty delegate to isAllEmpty. I'm assuming that there's going to be places that call isAnyNotEmpty that I need to fix. [26:46]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you go about finding those?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would use the call hierarchy. It looks like there is actually no other usages. It is only used in the tests. So some of these tests I can probably just delete. Maybe even all of them. They are testing the method I want to remove. Before I start, let me look at the other one. [27:51]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
This looks like the same thing. And we want to keep isAllBlank.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It is very much the same. [28:07],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What is going to happen to all the people using these methods.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You don't need to worry about that. This is between releases, the methods were added after the last release and are being amended before they have been released.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[28:47] ok. Let's start with this one.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'll copy this, and ... so I guess we will return true in this case. And..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would probably rewrite this using streams. [30:25],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
delete isAnyNotBlank. I also checked the javadoc of the method I deleted to make sure that it is covered by the one here. And it is.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
isAnyNotEmpty [31:46],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm going to do the same thing again.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
isAllEmpty.. and again ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ok. So i should run the tests for this. [33:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There should be errors here actually. I didn't delete the tests for the methods I removed. [33:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Why am I not getting errors.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I delete the tests. Hm, test failures. [34:48]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you expected some errors but not these errors?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I expected compilation errors, not test failures.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I guess I need to have a null-check here. And probably this is the same issue. [35:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ok. Let's try this again. [36:46],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What is happening now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
The test is failing and I am trying to figure out why.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok I think I see what is happening. But I guess, this is an array with one element null. Unsure why this method does not work. So this test is questionable then. Oh because it is cast to a string. I am going to try to remove this assertion to see if the rest of them would pass. [38:13]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: is this a change you intend to keep?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Possibly.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm going to remove this null check I added as well.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Then I'll run the tests again, and see if anything else fails.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so we're passing in arrays as nulls",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So one thing I didn't do was to run the tests before I started. I wonder if they were passing at that point.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: They were.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok. So what's going wrong here. This is calling isNotBlank on each elemet, which calls isBlank ..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
this ought to be working [40:38],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oh, I've done this backwards. This is calling isNotBlank and I should be calling isBlank. [40:52]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did you decide which call to make?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I copied the code from the original method it was delegating to, with the intention of negating it, but apparently I did it wrong. [41:17]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, let's run the tests again, and if they pass I'll add the tests i removed.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And that's the second. [42:06],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ok now they are passing. I am done.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I wanted to understand the relationship between the methods we wanted to keep and remove. I wanted to see if the methods we were removing were used somewhere else. Then I had to decide how to make the methods we were keeping work. I could have - because they were delegating to the ones we were removing, I could have kept those ones and made them private, but that seemed kind of not good, so I thought it was better to reimplement them. So I did that. Then I ran the tests, and it didn't work and I had to figured out what I did wrong. [43:09]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know any tools that could have automated any part of this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Come to think of it I could have inlined the calls to the methods that were being removed. That is what I would normally do. I think, because it is a study situation, and I using Mac and intellij, all those things contributed to me doing things I normally would not.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So if you would do this over again, how would you do it?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would use the inline refactoring to inline and remove the methods.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: In eclipse, when using inline, you are prompted to inline a particular call or all callers. How would you have configured the tool?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I guess I would only want to inline the call in the method we want to keep. If there were other calls I would get compilation errors and I could go and update them. [44:20],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The thing I initially thought of when I started doing this was, I would reverse the dependency, so the methods we were removing would depend on the one I was keeping, and then I would remove the ones I was removing. So all the other call sites would point to the one I was keeping. That is probably how I would do it. [44:39]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you had used the inline tool, how would you expect it to handle this negating problem.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It doesn't really transform the code... well, that's a good question. Sometimes in eclipse when you inline something, it won't let you do it, and I don't really have the grasp of when it lets you or not, but what I think it will do in this case, is just assign the result to a local variable and negate that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you have kept that solution or fixed it after?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I guess I would have fixed it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you have done what you did now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes [45:32] So I guess the inlining would not have been all that helpful. But I did start with copying and pasting the code, which is like manually inlining it. I don't know why I didn't just use the refactoring.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you do any repetitive code changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Both methods follow the same structure, so kind of.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you explain what that structure was? [46:00],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"First we check if it is empty, and then it is this part calling isblank on each element. Webstorm has this feature, I assume intellij too, where you can have multiple cursors, I guess I could have used that. But given the size of the methods and the difficuly of navigating through this large file to find them, I think that would not have been worth it. [46:40]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
T3 *reading*,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll start by finding the code. [47:32],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It's not pointing to a specific method. I guess I am looking for the methods that allow you to forceaccess. A boolean parameter. We have one on getField. And readfield. There are two readfield methods. And ... writeField. There are two of those aswell. And writedeclaredfield. And readDeclearedField. There is a whole bunch of them. So what happens when this flag is set. we are passing it into getDelcaredField. [48:41],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And is used to call setAccessible. I guess we just want to remove that. *checks with task*,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Going back to where this was called. [49:07],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I guess we want to remove the parameter from all of these methods. The call sites as well. What do we want to do with the tests. [49:34],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Checking where forceaccess is being set. So far it's always true. Looks like there are no tests that sets forceaccess to false. So I guess what I will do is to use the change method signature refactoring to remove the parameter from the getDeclaraedFields method and then run the tests and see what they do.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Before you being, can you explain the task back to me?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
We want to remove the functionality that allows us to access fields that are private. this is controlled by a flag that is passed into these methods. So I will remove this flag. [51:09],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's start with getDeclaredField. I use change signature. And remove this parameter.,,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
"Ok, I'm going to preview this. It's giving me a warning, I'm going to say yes. I always forget, the preview in intelliJ does not actually show you what it is going to do. [52:05]","Invocation
Not Predictable (“does not actually show you what it is going to do”)
",,1,0,0,0,0,"<1,0,0,0,0>",0,153-153,0,0,0,0,0,1,0,0,0,0,
So let's see what happens.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So this raises a question I didn't think about which is, what do we do in the else case?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
set accessible.. or else. I guess we will just keep returning null in that case. [52:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's run the tests,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, there is an error, because there is already a method declared like that, so I can just delete that one. Assuming it set it to false - what was it doing? It does not say. Let's see what this was before. [53:36]",,git diff,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, it was false. So I can delete this. Hm. [54:50]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So what's getting an exception here. This string is package visible. And we're in a different package here, so it's not going to work. So we could make this public. Where else is this used? No usages. So it's only accessed through reflection. [55:35]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Or is public child used? 33 usages. So it seems to be used just in this one test class. So it seems like it is fine to set it to public. Especially since we are not testing the case where the flag is set to false. Let's run it again. If it passes I think I can just go and change the signatures of the remaining methods.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now I have a bunch of errors [56:44],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm not really sure what's going on here.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so we are checking that it's made accessible, so making it public is going to break it.. so I'll make another field maybe? Hang on a sec. Seems like we want to have a public field and a nonpublic field. [58:11]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, in this case, it should be the same. This is checking that the two classes are equal, so we should probably add the public field there as well. [58:50]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, let's try this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So now we're back to the original exception that we had. And here I guess we want to access the public field.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So actually, we're testing this forceaccess that no longer exist. So maybe we should just remove this test. If we compare it to declaredfield it looks very similar. So let's delete this. [1:00:17]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So what is left are the remaining methods.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm going to have a look at how this is used. [1:00:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm actually more interested in the tests.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I wanted to have a sense of what the tests dealing with this are doing before I do the refactoring, because it is going to change the tests. [1:01:37]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I already confirmed before that it's only calling it with the flag true, and the tests are already passing, so this really should have no effect. So, .. [1:02:02]",,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
Why is it used in method body.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So again, I didn't actually read the code, I assume this was delegating to another method. But we also have another method with the same signature as this method, so I can just delete this I think. No it's delegating to this, so I need to inline and then delete. [1:03:05]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This is one of those cases where you can't do it. I don't know why, but when that happens my impulse is to try a second time as if that is going to help.","Invocation
Not Effective (“This is one of those cases where you can't do it.”)
",Invoke (Inline),0,1,0,0,0,"<0,1,0,0,0>",1,176-176,0,0,0,0,0,0,1,0,0,0,Inline
"Ok, so we do the same time thing I did before I guess. We remove these lines.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"and now we refactor, change signature.",,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
Then we can delete this one. [1:04:16],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's try running the tests again. [1:04:44],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm realising that I make a lot of assumptions coming from Eclipse, that I was not aware of. [1:04:54]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"For example, when I make a change in one file, and there are errors in another file, will there be red marks? [1:05:32]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess this is the same thing again, we want it to be a public value. Hm. I am not sure how this test was passing before. [1:06:26]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It is trying to access a field that doesn't exist. There is no field b on public child. So I am wondering what it was doing before. [1:06:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What actually is this code doing?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oh I did not notice, is there a superclass on publicchild? There is. So there is a field b on publicchild, the error I am not getting is not great, it's telling me that I can not find it, not that it is not accessible. But I'm thinking that I don't need to change that behavior because that was pre-existing.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Again, this is a test that I guess I can delete, because I guess it is testing forceaccess. So maybe I should go through and delete all those tests. There are a lot of these. [1:08:30]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Can I do that from here? Command.. [1:08:42],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No I can't delete things. That is kind of annoying. I can do that in Eclipse. [1:09:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ok. Let's do another method. [1:10:28],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll do the same thing[1:19:39],,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
then we can delete the duplicate method,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm thinking if this passes, I'll just go through the rest of them and then run the tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So basically, I expect to run into the same problems with each of these, and now that I did one without any problems I am expecting the rest to just work. [1:11:28]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
This is kind of making it obvious to me how much of my expertise comes from repetition. [1:12:22],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"When I am working in eclipse I am very comfortable, but here I am not comfortable and I'm going slowly, but now that I'm doing something I have done a few times I am getting comfortable and moving faster. [1:12:42]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: It seems like you refined your strategy and now you are just applying it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: At what point did you become comfortable with it? [1:12:59],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess I really became comfortable after deleting one of these methods and then running the tests and they passed, and I didn't have to change anything else. But I think the number of repetitions were also a factor. Like the first time I was really unsure what I was doing, the second time I felt more sure, and the third time I felt like I got it. [1:13:28]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: I notice that you have intermitted errors or warnings that you are not checking. [1:13:47],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It's telling me that there is another method with the same signature and I'm getting the same error every time I do this and I know I am going to delete the other method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And it's partially because, I guess, this type of task is something I’ve done a million times before so I'm very used to getting that error and ignoring it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So now let's see what happens. [1:14:33] Error. cannot find symbol.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, this is what happens when you go through blindly without looking at what you're doing. You get too comfortable. [1:14:58]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So this is gone and the question is what do we do in this case. I guess this case wouldn't exist any more so we can just delete this. [1:15:00],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"and here we get the same thing, set accessible workaround. Wonder what that is. [1:15:24]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
IllegalAccessException. So we're getting a field S from parentClass - what is parentClass. Superclass of public child. Which parent. it has defined s as public. So why are we getting an error. Why does it say it is protected. [1:16:57],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There is a public field on parent ... are we trying to set it to the value True? [1:17:42],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I see that it is a string. Which is not something I knew you could do with reflection. But apparently if you forceaccess you can? so apparently we should remove these two lines of the test, because it is no longer supported.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And it fails. Now it tries to set it to an integer. Same thing. No, it's a different field. i. It's package visible and we're in a different package. Where is this used. [1:20:02]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I was wondering if I could change the visibility of this to public since we no longer support it. But there are probably other tests that use it. It probably make more sense to look at the test. Oh, again it's just testing forceaccess so I can remove it. I thought I deleted all of them but I guess I missed that. [1:20:43]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So I think that should do it then. Did I run the whole class? Yes. I believe I'm done.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task. [1:21:25],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think I started out by trying to understand how these methods are used in the class that are used them. Each of them has another method that delegates to them and set the flag to false. The plan was to use the change signature refactoring to remove the parameter and then delete all the duplicate methods and repeat that for all the methods with the parameter. I deleted all the tests that were testing forceaccess. There were one or two other cases that failed where I had to add a public field under the test objects in order to make the tests make sense.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: your strategy changed throughout the task. In the beginning you changed the method, went to the test for that particular method, and then back to the next method. At some point you shifted to batch-changed the test and then go back to fieldUtils. What impacted that change? [1:22:54]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think I made the observation initially that there was a method getDeclaredField that were used by a bunch of other methods that all defined that flag. The idea was to start with just changing getDeclaredField and then - because that actually contained the functionality for overriding access - and then see which tests pass and fix the tests. And then change the method signatures of the other methods. That didn't fully work out, because there was at least one other method that was also overriding forceaccess but was not delegating to getdecleared field. [1:23:34]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The reason I chose that strategy was - I guess I like to minimize the number of changes I make before I get feedback from the tests on what goes wrong, so it easier to pinpoint what the problem was. Another thing I consider was after changing the method signatures, it's harder to see what the tests were doing because you can't see what the value they were setting for that parameter. I kind of wanted to look at the tests and figure that out first. [1:24:18]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: At what point did you realise that it would become hard to see what the tests were doing after changing the method signatures? Or did you know it from before?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think I knew that from the start. [1:24:29],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: do you know of any tools that could have automated any of the changes you made aside from the change signature one you used?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't know what else I could have done to automate it. I was basically making the same change to a bunch of methods.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Right, and you did try to use inline and it didn't work.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That's right.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You did not try it again.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That's right.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know why it didn't work. [1:25:17],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It couldn't figure out the control flow of inline method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you consider trying to work around that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't think so.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to redo this task, how would you go about it?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would do pretty much the same thing, except take advantage of the things I learned. [1:26:12]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would start out by removing all the tests of forceaccess and, I guess add that public field on the test class. and there was also the fact that there were two different methods that were overriding access, so I would start by changing both of those, and then change the rest of them.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you mean two methods that actually implemented the functionality?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What determined the order in which you did the code changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I started with the method that was sort of at the root, that implements the functionality.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: At the root of what?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
The call hierarchy I guess. The one that is called by the others. And the others I just changed in lexical order I guess. I just went through the outline view and looked for methods with a boolean argument and then changed them.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you used changed signature. [1:27:29] That left you with parameter references in the body. Then you went back and fixed them.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That was a mistake. The first time I did that I removed the parameter reference first, but then I forgot it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you wanted to complete one methods before movin onto the next?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If there had been other callers in the project outside of this class, where would you have fit those into your workflow? [1:28:02]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's harder, because you can't necessarily just delete them. I'd have to look at each one, figure out what it's doing and decide - I guess, in some cases it may be fine to just not override acces, but in other you may want to throw an exception. I guess probably - because .. *details and options*",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any other changes you made that you are unsure if you got righ? [1:29:18],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'd say that I'm never completely sure that anything is right. I didn't read things in detail so it's certainly possible that I got something wrong. Normally I would rely on tests to catch that. But I think that if I were to committ this code I would go through and look at everything I did.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You mentioned that you have done this type of task in your usual workflow. Is there anything you would have done different if you encountered this during your usual work?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would do it pretty much the same.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there anything you would do to support the changes you do yourself?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I guess in my normal work the methods would be used outside of the tests. I guess I would start out by understanding how they are used and whether this change is even feasible. [1:30:47] if we need to keep the functionality or if we can remove it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you have any final questions or comments?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This was a lot more difficult than I expected. The tasks are straightforward, but actually doing them in this environment and on this machine was difficult. I made a lot of mistakes.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you think made it difficult?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"a lot of this kind of stuff is muscle memory. Even just using an unfamiliar keyboard throws you off a little. The fact that I usually use windows and this is mac, I can never remember which modifier to use, that introduces a lot of friction. There are differences in the way eclipse and intellij present things. IN eclipse I notice right away when there are compilation errors but here I miss it a lot of the time.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Had you used intellij before?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I use webstorm all the time. It's basically the same thing but for javascript.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How have you learned about the refactoring tools that you do use?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Some of it is just by looking through the IDE and seeing what's there, trying it out. Some is from people telling me about them, some I've read about in release notes or blog posts. Sometimes it's by observing someone else doing someting and asking how they did it. I've used Eclipse for 15 years or so, and have gotten a lot more proficient over that time, and able to take advantage of the refactoring tools that are there. [1:33:45]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Which refactorings do you usually use?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Rename, inline, extract method a lot. Occasionally push up or push down. There's also - like not really refactoring - but code generation, getters and setters, I use those a lot. Also eclipse has templates that you can use to quick insert code. I use them a lot.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: For the refactoring tools, do you find that they are overall correct?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Not always. The biggest limitation are cases that don't work that ought to work. Like, it doesn't let you do that.","Reflection
Not Effective(“The biggest limitation are cases that don't work that ought to work”)
",,0,1,0,0,0,"<0,1,0,0,0>",0,263-263,0,0,0,0,0,0,1,0,0,0,
I: What are examples of that? [1:34:48],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Inline is probably the biggest one, saying that it can't do it when it should be able to. But sometimes there are mistakes too, like you do a refactoring and suddenly there are compilation errors. Occasionally you get just totally garbled code?","Reflection
Not Satisfaction (“Occasionally you get just totally garbled code“)
",,0,0,1,0,0,"<0,0,1,0,0>",0,265-265,0,0,0,0,0,0,0,1,0,0,
I: Do the tool usually warn you in those cases?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, it just do it and then suddenly everything is messed up.","Reflection
Not Predictable (""it just do it and then suddenly everything is messed up.“)
",,1,0,0,0,0,"<1,0,0,0,0>",0,267-267,0,0,0,0,0,1,0,0,0,0,
I: What do you do in those cases?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Hit undo. [1:35:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: In Eclipse there are different undo buffers across files right? Can you undo all the changes from the refactoring?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Usually. OCcasionally it gets confused and it doesn't work but mostly it's fine [1:35:57],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Have you used Move method?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, but I don't find it so useful? I don't think it updates the callers. I think it's basically just a cut and paste. Maybe I'm just using it wrong but I find it doesn't really work for me. [1:36:28]","Reflection
Not Satisfaction (“I don't find it so useful”)
 Not Effective(“I don't think it updates the callers”)",,0,1,1,0,0,"<0,1,1,0,0>",0,273-273,0,0,0,0,0,0,1,1,0,0,
I: How about extract class?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes. Actually I'm not sure. There's a refactoring for moving an inner class to it's own file.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Extract class is similar to the first task: you select a class and choose the members you want to extract into it's own class.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think I have done that. I have done extract superclass as well.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you consider using any of these during the tasks?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How come?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It didn't occurr to me. I think at some point for T1 it did occurr to me at the end, but it was too late at that point. But in that case you would instantiate an object to access them from, but you don't want that here. I guess I could have used it and deleted the delegate methods. [1:38:19]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"One thing I've learned to benefit from in eclipse, is to apply refactoring tools even when there are compilation errors. for example when there are duplicate local variables, you can rename one of them and it works as you would expect.","Reflection
Predictable (“even when there are compilation errors. for example when there are duplicate local variables, you can rename one of them and it works as you would expect. “)",,1,0,0,0,0,"<1,0,0,0,0>",0,282-282,1,0,0,0,0,0,0,0,0,0,
"For example, you declare a local variable and use it a few times. then you declare a second one with the same name, and use it some more. And if you rename the second one if will rename the usages of the second one, but not the first one, and vice versa. I expect a lot of people don't do that because it doesn't occurr to them that it will work. [1:39:08]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you trust the tool when you do those?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, because I have done it a few times so that it seems reliable.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you say they rename only ones that bind to the second one. Could it be ambiguous?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"How is it ambiguous? I am using it only in cases where I know that every one from the second one out binds to that declaration. I think a common case where I do that is when I copy code from one method to another. Also when you rename in eclipse, and you type in the editor and it renames everything in the editor, and when you hit enter it will rename everything outside of it. Sometimes I do that and hit escape. So there are cases where I want to rename references within one file, but not outside of it. This is not possible in IntelliJ which I find really annoying and I keep trying to do it out of habit. It is a hack but it works.","Reflection
Not Satisfaction (“I find really annoying “)",,0,0,1,0,0,"<0,0,1,0,0>",0,287-287,0,0,0,0,0,0,0,1,0,0,
"I: Do you use some of these tools when they introduce compilation errors, like in T3. You may get a warning or error and the option to cancel or proceed. Do you use them even so.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
All the time.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you find it useful that you can?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Definitely, yeah.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think people may be scared to proceed, but if you know what you're doing it is ok.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How do you make sure that you know what you're doing?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Practice I guess. You do it a bunch of times and find out.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: When you use such tools, how do you make sure that it doesn't make any changes that you don't want to your code? [1:42:02]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I have had cases where it did really strange things - like I renamed a method called get and it renamed every method called get. And the only way to really be sure is to check over your code line by line before you commit. But it's pretty rare and proably those are going to be caught by your tests, so I don't worry about it too much.","Reflection
Trust(""I don't worry about it too much."")",,0,0,0,1,0,"<0,0,0,1,0>",0,296-296,0,0,0,1,0,0,0,0,0,0,
"I: In T2 you did a negation. If the tool did that, would you have trusted it?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Since I had never used it before I would proably check it over to make sure it was correct. But basically I would trust it. [1:43:07],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
fin,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,