T1 [03:13],,,Predictable (8),Effective (6),Satisfaction (3),Trust (0),Efficient (5),Vector: ,Invoke (16),Row Range, Predictable (3), Effective (5), Satisfaction (0), Trust (0), Efficient (2),Not Predictable (5),Not Effective (1),Not Satisfaction (3),Not Trust (0),Not Efficient (3),Refactorings
I'm going to find these classes and see what the current state is so I can understand this better.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
testIsAnyEmpty. [06:54],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And these are both testing the same method? Or class? Interesting.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would.. there are different ways to do this. I would create a new class called stringUtilsEmptyBlankTest and would moving those classes over. The non-refactoring way would be to cut and paste them into the right file, but there are also refactoring tools for moving methods over to other classes.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you usually do it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would probably do moving. It is safer, you don't miss a character or documentation, annotations. It takes imports as well.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[9:10] This one wants to go... types are not in project.,,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
No.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What happened now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It didn't like my request to move it. It gave me, I guess an error message, saying it doesn't want to move it unless it is static. So that was unexpected. I am wondering if I can do something else to move it over without fiddling with static and not static.","Invocation
Not Predictable (""So that was unexpected.”)",,1,0,0,0,0,"<1,0,0,0,0>",0,11-11,0,0,0,0,0,1,0,0,0,0,
I: What did you say the error message was?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's try it again.,,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
"""All candidate variables ... "" *reading* [10:44]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It's weird, it's a confusing error message. Not in project.. would you like to make the method ..static and then move? Yes, let's do that. Ugh, it's public. Refactor. Ok, it looks like it just ... ok, can I create a new class in this? That was I was curious about checking. I was hoping I could create a class to move it to, but I think I have to create a class and then move it.. which is.. alright..",,"Invoke (Move)
",0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
...unit test. .. empty blank methods.. [13:24],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
option shift v. Move it to .,,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
"hm, foo string.. it's asking me what I want to move, and I'm still trying to wrap my head around the static non static restriction. I don't want to move that. That's fine. There we go, success.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Trying to think what that's called. [15:47],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There's a hotkey I want to use and I want to remap it because it looks like I will use it a few times.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[16:41] I have successfully moved over one method.,"Invocation
Effective (“success”)
",,0,1,0,0,0,"<0,1,0,0,0>",0,21-21,0,1,0,0,0,0,0,0,0,0,
I can actually just wholesale these over in the interest of time.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So now you are just copy-pasting?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, it was too much clicking around. The static-non-static-thing I didn't like, it was an extra step I didn't need to do. I had to apply static, move it, and take away static, it was just .. too many dialogues and steps. If I can just remember to do step A and step B, like, ... but I can just take it right over, so it wasn't really worth the extra steps.","Invocation
Not Efficient (“it wasn't really worth the extra steps.”)",,0,0,0,0,1,"<0,0,0,0,1>",0,24-24,0,0,0,0,0,0,0,0,0,1,
It's nice that these are all togheter. Then I can just wholesale them over. If they were scattered throughout then maybe it would be worth the extra steps. Hunting around would require a non-zero amount of time.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you evalutate that? What impacts your decision to cut or do the extra steps?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The amount of time. If I can .. like, it's like a batch move. I can just move them all over. Versus if I have to hunt for them. Maybe it's easier if I can do a quick hotkey once I find them, move this one over there, move this one over there, then it would make sense to use the refactoring tool. [19:46]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I didn't like that I had to duplicate this constant. I could have just elevated its visibility. We could still do that. So, that's .. true false, weird. Still using foo. We'll take this up to .. Package private. [20:42]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
StringUtilsTrimEmptyTest. [22:27],,Multi caret,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I was not expecting all those methods to come up in this list here, but it's just showing me the one.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So when you made it static you expected it to change all the ones you had selected?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It did, didn't it? No, just the one. I thought, since I had selected many methods, that it could apply it to all of them. But that did not work.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I need to revert to copy-paste at this point.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, what did I break? Nothing broke.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Alright, ship it. Successful. Does this meet the requirements?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I found those test methods and created a new class for them to go into, and I just resort to copy-paste them in, I did not take advantage of the refactoring tools.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You tried though?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I did try them, in a lot of cases they help. There is a small set of refactoring tools that I often like renaming variables and method signatures, classes, changing visibility. That's nice, in that you can make a change in one place, and it will find all the other references to that in other places and update them. It is tedious to do that by hand. Things break and whatnot.","Reflection
Effective (“it will find all the other references to that in other places and update them”) 
 Efficient (”tedious to do that by hand”)
",,0,1,0,0,1,"<0,1,0,0,1>",0,39-39,0,1,0,0,1,0,0,0,0,0,
"Whereas, in this case, with tests they're not referenced anywhere - like you can just remove it and no one will know the difference - the only difference would be in imports, if they were only used by certain tests, but that's just a file level change. But multifile can take some digging around.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How does that impact your choice to use refactoring tools?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
In this case the tools weren't adequate for what I wanted. So I'll just avoid that in the future.,"Reflection
Not Satisfaction (“the tools weren't adequate for what I wanted”)",,0,0,1,0,0,"<0,0,1,0,0>",0,42-42,0,0,0,0,0,0,0,1,0,0,
I: So your experience now would impact your choice in the future?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I definitely wouldn't try to refactoring tests that moves around. I would just copy paste.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you elaborate on that.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess I'm only going to spend so much time trying to learn how the tool works. I'll only go down that path once I know that tool. Once I'm on the path of knowing how the tool works, I know it's capabilities. But there are times it'll get upset, and at that point I'll consciously look around and see if there's anything I'm doing that could have been impacted. That doesn't happen very often.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: The first time when you did use Move and you did the static change, was that experimenting with the tools capabilities?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And then you decided that it was too complicated?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, it was way faster to go cut and paste.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Are there any changes you're unsure if you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I didn't test the other two files. I tested the new test file and it ran successfully. I would also look at my diff using git. I'd switch to the terminal and use git diff, and see if I made the changes I wanted to make, was there anything else in there, and did I delete what I wanted to delete.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that how you would usually do it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I would verify that it looks like what I though I did. But then when I push it to our CI suite it would run all tests and make sure it all works. I expect it would, moving a couple tests should not break anything. I rely on tests to tell me if I missed something.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
T2 [31:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The names are awkward to read, but the, thinking about the set theory implication of the names and I don't think that isAllBlank isAllEmpty necessarily covers the cases of isAnyNotBlank and isAnyNotEmpty. Ah, maybe it does. You'd have to go NOT in there. NOTisAllEmpty, NOTisAllLBlank. Ok, I had to think about the logic there.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oh, look at that. [34:59]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I just noticed the dependency between these. Yes, here we go. I was looking for the hotkey to navigate back. I would inline these isAnyNotBlank and remove the negation basically. Since we are choosing to remove it. There is a hotkey for that. [36:14]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Inline method is not supported when return statement interrups execution flow. What. Well I can do two refactorings then. I'll make a local variable.,,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
I: Can you please explain what happened when you tried to locate it and why you're doing this now.,,Invoke (Extract Local Variable),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Extract Local Variable
It gave me an error message which said that it cannot refactor it when it's part of the return statement. Which is bizarre to me.,"Invocation
Not Predictable (""Which is bizarre to me.“)",,1,0,0,0,0,"<1,0,0,0,0>",0,61-61,0,0,0,0,0,1,0,0,0,0,
I: So you expected that to work?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So now you're doing this workaround?,,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
"Yeah, kind of like that static refactoring. I'm introducing a local variable, so I'm hoping I can inline it now, and then undo the refactoring.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[38:28] I'm going through my head to find a way to use the refactoring tool instead of manually refactoring this.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What would you usually do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'd just hit inline and it'll put the body into the place and that's it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you trust the tool to do that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I do.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What impacts your decision to trust the tool?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would check the result the first time I do it. I want to make sure it is correct, and prior to using the tool I would have to do this manually, so I would just check, is it doing what I would expect if I did it manually.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Once I have decided that I like the tool I don't do that check.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I can't think of a way. I'll just paste this and see what happens. And that is negative. Oh crap. So I must remove the negation from.. [40:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
isAllBlank. The algorithm is different. Which I guess is the same problem. If I had inlined it. I need to think for a second about the impact on the algorithm.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess there are refactoring tools about, inverting if-statements and whatnot, but I don't know if that would help me in this case.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Charactersequence string all blank.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"there is empty. And. .. true.. ok, thanks documentation.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Go through it. If .. Actually.. if I find one that isn't blank, then. And success.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[43:50] testIsAllBlank. I'm going to run this test to check that I didn't just break that method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Blank is all done. It is standalone from the other one.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"My first impulse is to blow away and fix all the errors. I don't think there is a refactoring that can do this. There are so many references to it, it's going to ask what do you want to do with that. So I'm going to blow it away and fix the tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is this what you would normally do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think, to remove code. It's not really a refactoring in that you're not updating the functionality, you're removing it. So it being absent is going to throw errors all over. There. It's not complaining yet, so that's weird. Where is the test for that? Now it's testing something that doesn't exist any more.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'll run this test, it will compile the project and check that everything is still working. Success. I obviously want to follow the same pattern on the other function, which is why I wanted to do a complete sequence on this method. [47:46]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: This time you're just selecting it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I learned that the refactoring tool gave me a roadblock and I don't know how to get around that, and I just need to get my work done so I'll go around it. I usually add code before I remove code so I can look at it and compare the two parts. Let me look at this to make sure I understand it. It's probably the same logic. Empty array, return true. It's probably false but, ... it is not empty.. If I go through it and find something that is not empty it fails. This is true.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Was it intentional to keep the return statement until you finished this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I left the old code there because it helps me - part of the refactoring I consider the new code and I have the old code still there, so having both on the screen I can compare the logic and validate the algorithm. I It's kind of a habit I have. [51:38]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This one should be able to be deleted. If it's like the previous one it should delete the test. I rely on seeing highlights on the right side there, seeing big sections of things that are broken. And I'll run all the tests. I'm going to check though that there is a test specifically for the function I wrote.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm thinking through my use of refactoring tools and wondering if there is a different tool I could have used. [53:05],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would that tool be?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It was strange that Inlining didn't work there, that was strange. I guess it was because of the target function, because it was returning a constant. Maybe on a more complex method I could have .. I'm not sure it would have been faster.","Reflection
Not Predictable (""was strange”)
 Not Efficient (“not sure it would have been faster”)",,1,0,0,0,1,"<1,0,0,0,1>",0,93-93,0,0,0,0,0,1,0,0,0,1,
"I: Oh, now you're undoing for the discussion?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, so I can point while we discuss.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Here I'm thinking, since it's returning that constant immediately instead of returning at the bottom, that's probably why it was complaining about refactoring. So I could have refactored this function to introduce a local variable, assign that local variable and at the very end return it. Then I could inline it. Inlining would probably still complain at the test level, but you could delete them.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to inline it and it had worked, would you have inlined it to the tests as well?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would take the tests out after I inlined it wherever.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you used inline and delete then?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would remove the method since this was the goal, but typically, for backwards compatility I would mark it as deprecated and whatnot.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It would probably complain about it being used in the tests, I'd say go for it, and I'd find it with the big red blob.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Given that I had to go through several layers to get this refactoring thing to work - I don't know - for a bigger one I may do it. I hadn't thought of that, maybe I could modify this one si it doesn't throw an error when I refactor it, that didn't occur to me until I had done the other thing.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: If you were doing something like this again how would you approach it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would try to do the three refactorings rather than just relying on the one to work straight of the bat. [57:32],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Done.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I had to manually copy-paste functionality from a different method and modify it to work in a few context and verify - basically a reimplementation of that method. Verify that the new algorithm was still correct and not a regression.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did you verify that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
We had tests already. That's kind of the acceptance criteria for that method. If it worked before and I try to change it and achieve the same functionality then the tests should still pass if they're not modified.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you explain how you chose that order of doing things: You first finished one method before starting the other.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, like a vertical slice. Instead of refactoring both the methods and then check the tests. I did it that way to check that what I wanted to do was going to work .If I did a large amount of work and found out that it was wrong at the end I have more work to undo, versus doing a small amount of work and finding out if it was successful or not.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Then you repeat it if it works?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If my development algorithm is correct, then I can repeat it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: At what point did you decide what should consistitute one chunck of your algorithmic change?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I read the methods and the task, and I didn't get it then, but when I looked at them and saw the relationship between the two pairs of methods, and I could see the pattern, like there's two distinct chunks, and I can split this up and hedge my future errors. After I looked at them and saw the pattern in the implementation.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tools that could have automated the change?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Well, the refactoring tool, but it couldn't figure out what to do with the return method there.","Reflection
Not Effective (“it couldn't figure out what to do with the return method there.”)",,0,1,0,0,0,"<0,1,0,0,0>",0,117-117,0,0,0,0,0,0,1,0,0,0,
"I: If you have used that tool and it did what you did, would you have trusted it? Would you have checked it?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I definitely would have checked it. First time I would have checked it. But if the change they made is logically, or I go ""oh, well done!"" then I would use it again. I might glance over the second time, but once I get confidence I just hit the hot keys.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there anything that reduces that condfience rather than increases it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Error messages. I almost said dialogues or prompts, but it really just slows down using it, which is a barrier to using it. It just takes an extra thought step, looking at a dialogue. If it starts modifying other files that I think should not be .. like if it search some obscure library and I find this other method that has the same name, and I renamed it for you, like noo you did the wrong thing and now I'm a little gun shy.","Reflection
Not Efficient (“it really just slows down using it, which is a barrier to using it.”)
 Not Predictable (“If it starts modifying other files that I think should not be”)
 Not Satisfaction",,1,0,1,0,1,"<1,0,1,0,1>",0,121-121,0,0,0,0,0,1,0,1,0,1,
T3: [1:03:02],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Before changing code please explain the task back to me.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It seems like it follows this pattern.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What's the pattern?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Do the thing, and then add an extra parameter or force equals true, which I guess you have force equals false.. That's the API they choose.. I see pairs all the way down.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
My first thought was just to make the second method private.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: I'd like for you to remove the parameter. I do not want the method signature to stay there, even the private one.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
My first thought is I'd like to inline this method to be more clear. It's doing some class fiddleyness. Some reflection work here which makes sense considering what it's doing. The types might get fiddly.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What is forceAccess doing exactly? Just getting the fields?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
ForceAccess is.. I see.. make accessible.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Then the other one. [1:10:35],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think I'm clear on what it's doing. There's a set of methods that has this extra forceaccess parameter,
 [1:11:20]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you share what kind of information you were looking for in the code?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I was trying to understand what these methods were doing. The first I looked at - getDeclaredField - it calls out to two other methods in the same class, and this forceAccess is getting passed around. When I first saw the hardcoding of the forceAccess false there I was confused. I was also thinking about how to refactor it. If I want to do the inlining again. I don't know if it'll work or it'll give me trouble. I'm a little gunshy after that last experience.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Then I started digging a little: What does this method do, what's the purpose of that, etc. Reading and writing fields. It's basically finding fields and do things with it. WriteField..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Should I start at the bottom methods or top methods? Will it make a difference?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Bottom or top in what?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"WriteDeclaredField is more like a top method, because it's something that the end user would call, but then it makes calls to other methods below that. But a bottom method, maybe or maybe not you can make calls to it externally but it doesn't call anything else. It just does its work and it's done.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would your approach look different if you start on the bottom or top?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think that if you start on top it could be messier. There would be intermediate states of the code where it wouldn't compile or there would be error. There would be intermediate states where it wouldn't function correctly. If you start at the bottom ones probably you would just replace that one and it's just fine? It should refactor to being compilable and kind of the same functionality state.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think I'll go to the bottom one.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why did you decide that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think it's better to have code that is in a compilable working state. In my experience - I've done lots of refactorings over the years. And my experience is that you do a refactoring, you start making changes, you break things, and so you can go through the class from top to bottom, and you can make it working, but if you get interrupted and you come back and forget something, it tends to b more error-prone. Versus you make a change and it works and it's complete in itself. So if you did nothing else, you have at least moved it forward in terms of improving the state of things, but it still works. If you get distracted from that point, overall things are fine. You can come back and do the next pieces and keep moving towards your end goal.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This function we want to keep, so let's try to inline this? [1:16:07]",,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
Let's do inline and remove. Searching .. occ strings.. I want all of them. Do it. [1:16:25],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And now I'm going to verify that it did what I wanted it to do. So not entirely .. this is complaining now. If false && .. yeah no kidding. That's a good warning message. Ok, let's check the tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Was that within what you wanted the tool to do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah so this wasn't there before - or was it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It took out.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Wait..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This wasn't here before because this was a variable, but because it was being passed in hardcoded as false, it just inserted that directly in there. Now rightly IntelliJ is warning me saying this is useless. This will always be false. There is a thing for that. [1:18:07]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Why is ctrl+f1 not doing it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
If false - oh right. Let's do it again. Oh. Undo. This should not have been removed. Why did I remove the if-statement? [1:19:05],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Is that what I want? Invert?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That is a refactoring I'd like right now.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What is it you want to do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It is identifying that the condition is always false. So the else part will fire every time. But when I remove the if statement it takes the else part as well. [1:20:03],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think it should be smarter: only the else part should fire, promote the else statement to the main block and remove the if-statement part.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, then.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Set accessible workaround. I'm not sure what it does, but it probably does what it should.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That one is done and .. I kind of expected the test file to break. [1:21:04],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
If we made directe calls to that.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you expect the calls to go to the method that now doesn't exist?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I expect that it was called. Or maybe it wasn't, I didn't check that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I didn't check that specifically before I somewhat randomly chose it. [1:21:39],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
testWriteField. How many ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"testWriteField, testWriteFieldForceAccess, which I just removed.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If true and ifField is accessible and .. what is this test doing, it's different from the other ones.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oh, I think it inlined it. Which is kind of what I asked for. [1:22:45]","Invocation
Effective (“kind of what I asked for”)
",,0,1,0,0,0,"<0,1,0,0,0>",0,170-170,0,1,0,0,0,0,0,0,0,0,
I: What did you expect it to do here?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I kind of expected it - which now that I think about it was an incorrect expectation - I expected it to put in a ... method that .. err.,"Invocation
Predictable
",,1,0,0,0,0,"<1,0,0,0,0>",0,172-172,1,0,0,0,0,0,0,0,0,0,
That was a learning step.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I was confused, because it's not actually calling writeField. I was looking at the code there and to modifying it a moment ago.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"We don't actually need this entire test because we're getting rid of this functionality. I can just destroy this test. That's kind of what I was thinking when I started this. There is the test for writeField and there is the test for writeFieldForceAccess, and if we get rid of the forceAccess method we can get rid of the test. So it kind of did the wrong thing here, but I'm getting rid of the test here so it doesn't matter. [1:24:11]","Invocation
Not Satisfaction (“kind of did the wrong thing”)
",,0,0,1,0,0,"<0,0,1,0,0>",0,175-175,0,0,0,0,0,0,0,1,0,0,
It kind of funny that it inlined it and the test still worked. [1:24:35],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"My goal now would be to repeat on what we just did on the other methods. I usually go top down through the file, since it's easier to make sure I don't miss anything.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And I'm looking for the forceaccess versions. Oh wait, I was going to do the bottom ones first. forceAccess... [1:25:29]",,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
"Oh yeah.. I feel like this refactoring on the previous method did what I wanted it to do. I'm a bit more confident about it now, and I'm just going to double check the refactored method, if there's anything I need to fix like this. field != null is true, why is it always true, .. because getField guarantees it's not.. How do you know it's always null?","Invocation
Effective (“did what I wanted it to do”)
 Predictable (“just going to double check the refactored method”)
",,1,1,0,0,0,"<1,1,0,0,0>",0,179-179,1,1,0,0,0,0,0,0,0,0,
I'm starting to feel like.. I see it's analysing it's not actually null. [1:26:38] I'm not going fiddle with that one yet because that's an overloaded function which I'm noticing now that I can come back to.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I did a full file format trying to fix that indent. But it reformatted 340 lines which is too much for a pull request and will definitely make the reviewer unhappy.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"writeField writeField .. I'm going to go back to the test later, I need to batch it a bit.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm going to go to these other writing of fields functions, and I'll do the readones next.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
writeDeclaredField [1:28:07],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I can just inline this one. [1:28:31],,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
Ah!,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
return null return null. return field. Ok. [1:28:48],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There's no loop here. I think we can refactor this functionality so we don't have .. that would just make my other inlining easier..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you explain what you mean? [1:29:21],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I tried to inline this one, and it gave me the - doesn't like - because of the return statement interrupting the execution flow, which because of the previous experience I have a better understanding of what that means. So like this return statement here, in, I guess the middle of the code, makes it more difficult to refactor, so I'm wondering if I can refactor it like I proposed earlier and see if that would allow me to inline this function. I don't need to do that this, in this case it would be faster to just go for it, but I'm thinking that if I learn this part of the tool, this I guess minor refactoring, that would help me more in the long term.","Invocation
Effective (""in this case it would be faster to just go for it”)
",Invoke (Inline),0,1,0,0,0,"<0,1,0,0,0>",1,190-190,0,1,0,0,0,0,0,0,0,0,Inline
"I: What would usually impact your decision to approach the intermediate refactoring, or do it by hand?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Time, is the short answer. If three refactorings takes longer than modifying two or three lines, then I'll just modify them.","Invocation
Efficient(""If three refactorings takes longer than modifying two or three lines, then I'll just modify them."")",,0,0,0,0,1,"<0,0,0,0,1>",0,192-192,0,0,0,0,1,0,0,0,0,0,
I: So your assumption about the time it takes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I guess I'm not being scientific about it. I guess it's not all .. it's the tedium and accuracy as well. If I did it by hand because I thought it was faster and got burned by that, I would definitely consider an automated way of doing it. [1:31:40]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Burned as in, it wasn't actually faster.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It wasn't faster or I introduced errors and I had to go back and waste my time.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"But I kind of want to see if I can refactor this. It's not a loop, so I should be able to refactor this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
is not local..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Split.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Move up.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oh, it's final.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Fine.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It's definitely assigned to.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"In that case I'm going to return null, field .. this is entirely inefficient, return that there, oh yeah so my one concern was, a very tiny efficiency change here, is that I'm just assigning null to this field over here, but in Java, un-initialized variables are automatically assigned null so this is the same. I just declare it, it's null, it gets assigned immediately there, .. this part can be outside. Maybe not, I'm not sure if this has potential to throw noSuchFieldException, except this would only throw this here, but in the interest of time I will move on,",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[1:34:11] Wow. we use it a lot. That's not what I want.,,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
I: That made you stop?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah. It says in 22 occurrences. That's not what I want.,"Invocation 
Predictable",Invoke (Inline),1,0,0,0,0,"<1,0,0,0,0>",1,208-208,1,0,0,0,0,0,0,0,0,0,Inline
I: Is there a cutoff number for you?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It should be one. I really just wanted this one call to it to be inline. So I did the wrong thing there. What other thing could I do. [1:35:08],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Oh yeah I have an idea.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"[1:35:16] I need to do a couple of refactorings that I think will achieve what I wanted with my first attempt. That refactoring is now possible, which is great. But I don't want to just like, inline this 22 times, that would be not great. I basically want to replace this method with that method. I want to replace this method here with this method here in all the places it is used. I am going to inline this method, in this instance here, and leave this method in place. Then I am going to comment this method out, then refactor this method to remove the last parameter. The method signature should then match this one, and it should update all others to delete the parameter. Then I can delete this method, and that should do what I want. [1:37:00]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No.. inline .. don't do that, keep the method, yes.",,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
"Yep, that is great. Arguably I could try to refactor this back to what I had before, but I think it is about sufficient, so I'm going to leave it, in case someone else wants to refactor in the future they're going to have that option. [1:37:43]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Comment out.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
We're going to ..,,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
I: Why did you comment it out before you initiated the refactoring you're going to do now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If I don't, the refactoring should complain about collision on the signature. Let's see if I'm right. ForceAccess is used in the methodbody and the method is already used. Do I want to do it anyway? Yes, sure. Ok, so I can just blow this one away. guess it wasn't so bad to let it complain. Just more reading I suppose. So now, since the signature is the same. Let's check the test of writeDeclar...test.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"oh, getDeclaredField. Ok, that did what I wanted to do. I will come back to delete these tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How do you determine which ones?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
By their name. They all have forceAcces in their names.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And if they didn't?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Then I'd do it right away to not forget. Right now the tests are just inefficient, in that they're double testing.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would kind of expect that IntelliJ could identify that this code is identical to the other method code. Then I could manually compare that. I guess it's slightly different enough that it's not allowing it. Oh yeah, they're not the same.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did you determine that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I... I just did like a jump forward and back between the methods I was looking at. And I noticed that they lined up perfectly, like, these lines lined up perfectly with that other function and I was able to see that something changed about them.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you didn't read them?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, I just looked for a visual pattern change.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know what actually changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I can see that a few lines changed. I just toggled back and forth between two spots and it kind of, almost animates, what changed and your eyes are drawn to that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
If there is a textual change I can read that part; if there is no textual change they'll look the same.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess it doesn't matter if the functionality is different in the tests, since I'm going to remove the tests because the functionality it tests no longer exists. But if we were kind of trying to merge the functionality, I'd look at what's beeing tested in this one method and is there anything I need to bring over to the one I'm going to keep. [1:42:50]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So delete field. And, oh.. Ah, the test, why is that wrong.. readField. writeFields.. writeDelcaredFields.. getFieldForceAccess.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I want to do that refactoring again. This one has a loop, that's not great. It's going to return field here again.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: This time you haven't tried to inline it yet.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I'm just looking at it. I'm trying to determine is this inline attempt going to burn. And It hink it is. is this... yes, it is redundant. [1:44:15] Hi-yah",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok well, maybe I don't need to inline it. Maybe that's the real problem I'm creating for myself.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Are you reassessing your strategy now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah. I can do with the if-statement to avoid the inline problem. But with the loop it's trickier. it makes sense to break out of it early, so it's inefficient not to do that. I think maybe I could just remove that parameter and then fix the problems really. Kind of what I did in the latter half of the second attempt. [1:45:53]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm thinking if there's a way I can - this is being used. If I just remove the .. let's see what happens. Yeah... It's probably fine. [1:46:43],,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
"That's broken, that's fine, forceAccess is used right there, that's fine. I was considering introducing a temporary variable of forceAcces is false and just sticking it int he method. But I thoguht it'll just be an extra step and I'll remove it anyway.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: In what cases would you have done that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If its usage was more complicated. Then I'd put it in there to ensure I achieve the same functionality. Since it's just in one place and it's a boolean, it's not so bad to let it break briefly. This is going to go away. I'm going to fix and combine these two methods, and keep the documentation from the first one.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So this was conveniently placed in the file, so you could just do that selection. If it had been positioned differently what would you have done instead.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Good question. [1:48:35],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Probably copy-paste-modify to bring them together and do that. I really wanted the javadoc from the method we are keeping, so maybe just take that and paste it over the one we keep, and then blow away the old one. Again a manual step to lunge those together. Ok, I don't know why this is complaining. I'm pretty sure that error was there before. let's leave it for now. [1:49:31]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's move on. Get declared field is great. Reading reading reading writing. This is more complex. I'm searching for what I would call the lower level method again. I'd stick with my pattern of working from the bottom up. That'll do it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
if forceaccess and ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"readfield, what is the logic here. [1:50:40]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok we can get rid of that. Another one. I'm going to skip the preview button, I can usually undo if it doesn't do the thing I want. I have used preview before but I didn't get value from it, so I stopped using it.","Invocation
Not Predictable (“I have used preview before but I didn't get value from it, so I stopped using it.“)",,1,0,0,0,0,"<1,0,0,0,0>",0,250-250,0,0,0,0,0,1,0,0,0,0,
I: What did you expect from it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I don't know, I was kind of curious what it did. I guess I expected that it saves me from not being able to undo something. Say I need to change a bunch of different files, 'cause refactorings can be quite wide-sweeping. Let's say I did that, and it breaks a bunch of places, and I want to undo, but it doesn't undo across the files. A preview would prevent that in that it hasn't actually made the change. But undo does work, so I'll just go for it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Hold on a second, did I do the right thing there?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
ReadField...where...,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Where was forceAccess being used and why am I not seeing it now ?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Undo.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, it just wasn't being used probably because of changes we made. [1:52:50]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I did some undo and redo there.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why did you undo?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I wasn't expecting that the parameter I removed was used in the method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you expect it to be an error?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I expected it to be an error there, but it wasn't. I'm not sure why that wasn't there - it wasn't being used, I just checked - maybe some of my steps before removed it, maybe it was always like that, I don't know.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: *interest of time I'll stop you*,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Please explain the changes you did in order to solve this task.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"My first step was to understand this code. To understand the scope of the change I'm going to make, how it's being used. It's a little special in that this is a library, so they aren't really being used in other parts of the code, versus i an application, when making changes to the method, it's going to impact those. It's important to ensure that the overall functionality is still working. The tests I would probably be the only place using it so I checked there.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Since there was a set of similar changes I wanted to do, and they followed a pattern to that was great, I wanted to make sure that the pattern was consistent, so I looked around for that as well.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What was the pattern?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The pairs of functions: readfield without the forceaccess parameter, and readfield with the forceaccess, then there were tests for one method signature and tests for the other. One method signature would throw exception in the case of - wonder if that's true - there were a few extra test methods that had exceptions - but maybe that wasn't different between the methods. ForceAcceess probably had the same thing, and the readFieldForceAccess probably had the same set of exceptions. After I understood what was going on, I wanted to think about, what was the quickest way to do it. Especially if I was going to repeat it many times. If I was just going to replace this one function, it's better to not spend too long thinking about, you know, which way do I think will be faster, to try and use a refactoring tool that I'm not entirely familiar with or there is some complications, then it's faster to do manually. But if I'm going to do it five times, ten times, then it's better to have some repeatable process [1:56:29]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you talk a bit about your repeatable process in this case? You started out making one and I think you changed it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I tried three different ways. One was that I refactored the method so I could inline it. The second time I did a commenting one out, changing the signature and uncommenting. Third time I realised I can just change the signature, accept the errors and remove the old one, basically.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to do this task over again, how would you approach it from the start?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would do the third approach basically, just refactor and accept the errors and fix it. I try to - if I'm doing that sort of thing I'll keep my eye open for ways to optimize the process. Sometimes there's something in there - like maybe fixing the errors become too tedious, and I'll look for any way to avoid that, like a refactoring I can do just before, taking the parameter out of the method, to make that next step easier. [1:57:59]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You mentioned a couple of times the time you save or spend on it. Is that your main tradeoff evaluation.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think so? I guess tedium comes into a bit.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you find tedious about this task if anything.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Copy-paste-modify is tedious. Making the same change many times, remove this parameter, remove this parameter, that gets tedious, I mean, there's a pattern change there. I mean, just thinking about it, I wanna make the same change to this set of methods that are following that pattern, you figure out the pattern computer, and I want to make this style or this pattern of change.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: In the beginning you changed the method and then the test, but then you changed the direction of your cut, so to speak, and just changed the method but not the tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I thought the test change would have been easier to do, so that would have been the last step. I would have gone top to bottom in the test file and found anything with those forced access methods and just delete them. I thought that would be easier rather than navigating, finding the specific one, and finding, for this method, which test applies just for this method. Because of that naming pattern it was easy enough to find, in this file, from the total set of methods, these are the ones I want to remove.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What if there had been other usages in the rest of the code base. How would those calls have fit into your workflow?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Going around and fixing those? I don't know, that's a good question. I don't have a fixed way of doing that, I do what feels like a good idea at the time. If the change is like the test file, and I can just hit a file that I've broken and I can go through and fix all the errors without jumping around a lot, then I would maybe do that. but if it's like one thing here, and thing there, I may look at all the errors, fix all the errors, and move on to the next step. Depends if I'm feeling more engineery. [2:01:36]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you used an automated tool or did a manual change, how would you usually verify that it's correct.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"With automated tests. Compiling of course is fantastic. This is more difficult on weakly typed languages like php or javascript, where you have to run the code to see what's going on. Which is one thing I really like about strongly typed. Are there compile errors, fix those. Warning messages I try to take those seriously. But also, like in tests - making sure it's proper tests. I'll run test coverage reports and make sure that all the functionality there is covered.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You mentioned your git diffs before, would you use those to validate somehow?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, before I commit I'll do git diff and see if there is a todo statement, if I left something, before I burden someone else with reading through it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: I want to ask about the intermediate changes that you introduced that you didn't really want. In the first task you introduced the static keyword in the method declaration. Occasionally you did these workarounds in order to use these tools. How is your tolerance for how far you stray away from your original intent.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If I do that, I'm trying to save some time. Time is a big factor there. The likeliness of making an error - it increases a likeliness of an error which will waste my time. When I write unit tests I do that a bunch. Like I write the test, I want to extract the code into a method, but then there are some constants, and you can do the intermediate step of extracting them into variables, select the code below the variables, then it get parametrised correctly, and then I'll inline those back into the method call. With hotkeys I can flip through those changes quickly. Versus like, copying the value, typing out the variable name.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So that's similar to the local variable intermediate step in the first inline refacoring?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, if the value had more importance in the functioning of the body, I'd probably do that to make sure it stayed the same, and then do more refinements and remove it as needed.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Any final comments or Qs?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, that was fun.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,