Task 1 [02:28],,,Predictable (3),Effective (1),Satisfaction (0),Trust (0),Efficient (1),Vector: ,Invoke (11),Row Range, Predictable (1), Effective (1), Satisfaction (0), Trust (0), Efficient (1),Not Predictable (2),Not Effective (0),Not Satisfaction (0),Not Trust (0),Not Efficient (0),Refactorings
So these tests already exists? I am supposed to create a new class that has any name and move these into the same ones?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, should probably be at the same package. [04:25]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll just create a new class. [04:52],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would just select these ones and copy them over.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Should I copy them or?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: They should only be run once.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ok.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you doing now? [06:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There is this variable.. I'm not sure if I should copy it or ..maybe I have to copy it over. Alright.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Now you're running the new test class?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I don't want to run all the tests, I don't know how many hours it will take. [07:50]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Seems to be all good.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What source code changes did you do in order to solve the task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I located all these methods and extracted them, or - I'm not sure what the term is. I just copied them over and removed them from the old class. [08:33]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any tools you are aware of that could have automated the changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Not that I am aware of.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any of the changes you are unsure if you got correct?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I am not sure - this variable is used in both of the classes and if it is relevant that it has the same value.. it is just the tests so it shouldn't really matter. [08:59] Also class names. If naming should be like this. [09:17],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You were selecting different parts of the class, were it because you realised it wasn't right or to help you think?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I first copied everything including the variable, but then I realised it was used other places, so I wanted to copy it over separately. [09:58]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Task 2 [10:03],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
isAll.. this one exists right? [11:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So there are these two methods isAnyNotBlank and is AnyNotEmpty, which should be removed and instead isAllBlank and isAllEmpty should be used. isAllBlank is using isAnyNotBlank. What should be done is, this should be moved into the method and kind of negated. [12:05]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And all usages should be replaced with isAllBlank and also negated.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you want to move into the method?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This code, basically negated, basically where it is false there should be true, and where it is true.. [12:34]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There is probably find usages or something..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There are no usages.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"A simple thing... you can basically just replace this string, like isAnyBlank with !isAllBlank [14:03]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you want all the usages of that one to use the other negated method?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes. [14:18],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
In comments..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Not what you're looking for?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll delete those parts anyway.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Those will also get deleted.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Are they used somewhere else?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So there is no isNotAnyBlank in .. we remove and put the functionality in isAllBlank. and now there is isAllEmpty. [17:04],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you are just repeating the same strategy as before?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Mm. I'm reading what the method is supposed to do and checking that it is actually doing that. [17:43],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
isAnyNotEmpty.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I's like double negated. So basically it is the same thing is any not empty. If this method is the same as - if isAnyNotEmpty has the same functionality as isNoneEmpty. I'm struggling with the double negation. [18:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Are you going by name or documentation now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It feels to me like this has the same meaning as this one.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It's probably also the case for this.. so if isAnyNotBlank,...
 [19:02]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You're going back to the previous method?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, just reading.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you doing now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm moving the code from the old one into the new one.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And I am changing this.. same as the other method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And I'm just checking if there are other occurrances of the old method in the code. [20:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You decided faster than the previous time?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, it is the same thing, just a different method. It might make sense to just run the tests to see if it is actually compiling and working. [21:34]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
so isallempty fails..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, if it is all empty it should return true. Then it goes through each character .. then return true.. [22:55]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: were you kind of reimplementing the method? You were kind of trying to fiure out what it should do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I did not reimplement it from scratch, just debugging.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
You iterate through each character and if there is a character that is not empty you return true if there is .. a character that is not empty in the whole string..but if there is ..no it's not. If it is not not empty. It's not empty. [26:03],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
If all of them were isEmpty then it is true.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So I suppose if it is empty it is false.. [27:27],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So the method should return true if it is null..right..or empty.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: No, if null it should return false, as on the first line. [28:44]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So like this? Should probably fix it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm just checking the other tests now [31:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
done.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What source code changes did you do in order to solve this task? [36:44],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Basically I extracted the code from one function and moved it into another function that already existed, and went through the logic and updated it. Negated it. Then I removed the tests referencing the old function. I checked if there were any references. [37:26]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: For the second part it was a bit harder, you spent a bit more time on it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I was confused by the double negation and I thought it was the same logic and you have to reverse it. I think the double negation confused me, and there were some errors in the negation process. [38:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Among the changes you did are there any you are unsure if you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think they are right since all the tests are working. [38:22],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tools that could have automated any of the changes you made?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Not that I am aware of.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Task 3 [38:38],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So if you want to use the functionality you add the flag. I'm just wondering if it is actually used anywhere. [40:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Doesn't look like it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You don't need to worry about client code.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Right.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Before you get started, how do you plan to go about solving this?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I feel like - there is a safe delete thing that will also look up all references to the code.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm going through the class for forceaccess. I'm not sure if the flag is somewhere defined. [43:21],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So basically I have to remove this parameter from all the functions in the class. Hm. I wonder if there is an elegant way to do that. I mean one way would just be to replace this by nothing. [43:49],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's see. There is some refactor options - there is safe delete. Ok.. [44:08],,Invoke (Safe Delete),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Safe Delete
"Alright. So It is used in the code, but just considered as false, so this should be good.",,Invoke (Safe Delete),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Safe Delete
I: What is this telling you?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It is a bit confusing. Those are probably methods that calls the function I am currently modifying. It just shows for this function what the change would look like. [45:57],"Invocation
Not Predictable (“confusing”)
 Predictable (“It just shows for this function what the change would look like.”)",Invoke (Safe Delete),1,0,0,0,0,"<1,0,0,0,0>",1,91-91,0,0,0,0,0,1,0,0,0,0,Safe Delete
There is already a method that exist. And it basically just calls the old method. So I can safely delete this one. [46:45],,Invoke (Safe Delete),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Safe Delete
this would be false so we can just remove it.[48:45],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you just do that code change to help you think?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,Invoke (Safe Delete),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Safe Delete
I: Now you were just searching for the next one straight of the bat?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I am looking at the forceaccess flag where it is used. I am finding multiple functions with the same name that also has the same parameters.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Now you deleted one and undid it.,,Undo,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I didn't realise it was three functions. Before it was just two so it was relatively easy to just delete one, but now there is three so I have to ..","Invocation
Not Predictable (“did not realise..”)",,1,0,0,0,0,"<1,0,0,0,0>",0,99-99,0,0,0,0,0,1,0,0,0,0,
I: Can I ask you what process you just went through.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I was checking that all the methods call the same. [52:16],,Invoke (Safe Delete),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Safe Delete
Can also just remove this,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did you decide that was the right one? [52:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
This method has the same names and parameters as this other one.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Same for this one. [53:10],,Invoke (Safe Delete),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Safe Delete
Ok. Just checking if all the forceaccess tags are gone. Cool.,,"Invoke (Safe Delete)
Invoke (Safe Delete)
Invoke (Safe Delete)",0,0,0,0,0,,3,,0,0,0,0,0,0,0,0,0,0,Safe Delete
So now I am checking the tests. [55:48],,Run tests,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why do you think they are failing [57:04],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I am not sure. It might be .. the tag is gone now and the change tag changed the logic in some way.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: When you were changing the code did you expect that you would need to change the tests as well?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I mean, it said it. I think it would be better to change one function and see if the tests were running instead of making all the changes at once. Especially now that I don't know how it was before. But there is a git repo.. I can see a diff? How it was before?",,git diff,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Yeah, you can do that. [58:22]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I am looking specifically for the getField function to see what it looked like before. [58:59],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you noticing?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It is using this tag.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Did all the test originally succeed?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: No, if you had run them before starting they would have succeeded. [1:00:24]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now i am looking at the changes made to the test class. [1:01:33],,git diff,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Right, so this used to be true.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did that change?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Through the safe delete thing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you expect that to happen?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, I was hoping for that to happen. [1:01:56]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now it should be back to how it was before and false here.,,Undo,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So now you are essentially rolling it back and making this into a smaller change?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Are you expecting this to be part of your solution or to help you think?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now I am doing it to help me think and debug.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm just debugging. [1:04:15],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm just checking if any changes were made to field.java. The error happens here. [1:05:02],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Was there a change?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There was no change here. [1:06:09],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm wondering now, the previous tests when the flag was still there - it was using the functionality that the tests provided, but now that it is removed.. I'm wondering if it is expected that they fail because the functionality is not there. Essentially these tests could be removed. [1:06:37]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Like, all the tests that used to be using the flag. [1:06:50]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You're using the git diff now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah... it's not clear in the IDE which of the tests had the flag before that used to be true. [1:07:23],,git diff,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Basically the whole test can be removed, because forceaccess is not there so there is no use in testing forceaccess.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Now you are checking that it was changed?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes - I would assume so - I am just double checking [1:09:05],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Alright, seems to work.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What source code changes did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I removed the forceaccess parameter from a lot of functions in fieldUtils, and then I removed the tests that were testing the functions. [1:10:44]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you mind explaining in a bit more detail the changes you did? [1:11:02],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let me go back to the functions.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And if you used any tools.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I used the safe delete functionality of intellij. There were some functions that had the parameter and some logic that used the parameter. So I removed the logic - assumed that the value was false and could remove some of the condition checking that way. Then there were some previous function definitions that overwrote the functions that had the forceaccess flag, so I could remove those as well, because the function definition would now be the same. [1:12:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you check for usages of them?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The tool showed me, safe delete showed me that there was another method.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Was that for the method with forceaccess or the other one?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It was also for the method, it was warning me that there were two methods with the same name and definition.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You felt comfortable deleting one of them?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah. The other method just called the other one. It was just a simple call - it was easy to see what the function was doing. [1:12:52],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any other tools that could've automated these chagnes. [1:12:57],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Not that I know of.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: I am curious about how you organized your changes. You chose to first change this class and then move onto the tests.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, I forgot about the tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Some of your first changes also impacted the tests.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, it removed the parameter.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Was that intentional?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, it is what I expected, that if I remove a parameter it would also be removed from the calls of the methods.","Reflection
Effective 
 Predictable",,1,1,0,0,0,"<1,1,0,0,0>",0,160-160,1,1,0,0,0,0,0,0,0,0,
I: Even though the tests broke. [1:13:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I mean .. yeah. It is annoying. It is still something I would expect. Maybe more warnings would be better.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Are there any changes you are unsure if you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I am pretty sure it is fine. There might be.. no I am sure it is fine.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What makes you sure?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I was just - well, if the tests.. there were a lot of smaller tests for one function, and it would test something where this flag is false. Then I would have just deleted it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did you decide which tests to delete?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Based on the name. The name was something like test forceacces writeField. Like, everything that had forceaccess in it could be removed. [1:14:59]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You looked at the refactoring menu. What made you look at the refactoring menu and not at the other tasks?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I felt like it would be a lot more work to remove this manually. There might be a lot of other places that use the method, and I would not want to manually delete or change the method call there.","Reflection
Efficient (“a lot more work to remove this manually”)",,0,0,0,0,1,"<0,0,0,0,1>",0,170-170,0,0,0,0,1,0,0,0,0,0,
"I: If you were to do this over again, would you do the same?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"What I would do differently is to change one method and then check the tests to see if they are running, and change the test according to that. I would not do all of this in one go and then go to the tests. [1:15:40]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you still use safe delete?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I probably would.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: When you do these kind of source code changes like in this task, normally, how do you keep track of your changes?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Normally for one class of refactoring I would commit all the changes. Then it is also easier to realise that this refactoring broke some functionality - I can just go back and fix it. Just committing. I think that is the main way to keep track of those. [1:16:29],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What kind of granularity would you use in this task for example.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would probably.. for each task a separate commit. Maybe for task three I would split it up, because it was a lot of changes, maybe per method.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: If you were to commit per function - would you want the tests to run?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, for each function I changed I would run the tests. [1:17:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you would actually organise your changes totally differently from how you did it now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, pretty much. I would do the changes in the utils class and then move on to the tests, and for each function..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Then commit, then next.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: do you think there would be any problems cross function wise with that. [1:17:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"After every change I would make sure the tests are successfully running, so I don't think so.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: I am curious about a couple other options for this. Did you consider change signature?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't think I have seen that one. What does it do..,,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
I: You can use the minus or plus,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Does it also update the doc comment?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Then it would have been an alternative.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How do you think this one would have worked with usages both in the body and in the test callers?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think it would have done the same thing. The only thing I would have done is removed this one.. does it also show warnings? Yes, I think it would have been more or less the same.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What about inline method? [1:19:08],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Are these refactorings you are familiar with?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I have heard of them, but I am not sure.. what inline method.. what is it supposed to do.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: In general it takes the call to a method and replaces the call with the body of the method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It doesn't remove the flag though.. it would have helped when I had two of the same methods with the same signatures, that I could've just used inline method and it would have been just one of them after that. [1:20:10]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: It would have inlined it to the one without the flag.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, the other one is calling it. It might have simplified, but it was just deleting.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You spent a bit if time at some point figuring out which one to delete.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes - because there were like four methods with the same name. So in that case it would have been useful. But if there are just two of them and it is clear that one is only calling the other, then..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: what about in the previous task, task 2. Do you think any of the refactorings would have been useful there?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, probably the inline method. [1:20:56]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: If you were to repeat it would you consider using it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I probably would consider it. I'm wondering if it also negates the logic of the function. Since I had to like, change the boolean values.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Were you aware of something that went wrong there?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
After debugging yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you think went wrong?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
The duble negation. Reading what the method was supposed to do was like the other one. I was not sure if it was actually the same thing they were doing or the opposite thing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: *explain the misdirected call error from task 2*,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, I was wondering about that, but then I already deleted the code. [1:22:23]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you keep track of that stuff normally? All through git?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, usually.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you consider to check the diff?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I didn't think of git at that point.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Only on the third task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How come?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
There were a lot more changes. I was more desperate.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you thought this one would be easier?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any of the changes you made during this task that you would like for an imaginary tool to perform.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, you probably often change the signature of function, like adding new parameters or remove them. So I could see that being useful. I'm not sure what the ideal tool would look like. Because, sometimes you might want to remove all the tests, but sometimes you might want to change the tests instead of removing them. So for the third task, I am not sure what I would ideally like. But it is definitely something that happens relatively often. [1:24:01]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It is all tasks that happens sometimes, but I feel like task 3 is something that happens a lot so support for that one would be usful. [1:24:14]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: I am curious, you seemed to kind of separate the callers in the tests and not in the tests when it comes to what needs to be updated?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Like, I update the tests separately from the actual code.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Yeah, even now you said that you might want to delete them or sometimes change them, whereas for the other callers in the class you will always delete that code I think? [1:24:47]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Right. I guess so. In this case, yes.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: but in some cases it is sort of the same?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I mean - tests are usually kind of separate.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you expect a refactoring tool to treat them differently?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I mean - kind of. I mean, tests are almost like - if you used this code in some client - tests can almost be like a client that used all the functionality there is. They should probably be treated differently from the actual code when it comes to refactoring. I can probably not pinpoint exactly how, it is more like a feeling. [1:26:13]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: I'm curious about your wording. You mentioned for the first task, that you extracted the method. Would you mind sharing a bit of how you think of that concept?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think the right terminology is moving the methods. Extracting is more like - if there is some code and you put it into a new method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: What about extracting a class, would that have fit what you are thinking?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, instead of methods, then into a class.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: But it would only work for one of them rigth, because the second time you would be moving them into an existing class. Does that makes sense?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah - the first time I would create a new class and extract these methods into it and then I add - then I move them because it already exists. I mean when you work on code you don't think about the terminology, you just know that it is right to have an extra class or and extra method for this, no matter if it is called inline or extraction or whatever the refactoring terminology is.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: But if you were to use tools I guess you would need to decide on the terminology.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, that is right.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to look for a tool to do this, maybe on a bigger task, what would you look for?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It would be nice if there was a way to select all the methods you wanted to extract into a new class, even if the methods were in separate files. [1:28:17]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I guess it is key to have a UI that is not confusing in that case. [1:28:26],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to use a tool to move them, what do you expect that tool to do?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Essentially if you select your methods, it would delete them from the orignal",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What about this case with the extra field?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So like, if you move them you may also need to change some of the dot-comments, so if you have some class.method name, the tool should also consider that. [1:29:27]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: There was also a field that had to be copied along.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So the tool should also do that. Or reference it. I think in this case it would've been possible, because it was a static field.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,