Task 1 [07:46],,,Predictable (5),Effective (3),Satisfaction (3),Trust (1),Efficient (2),Vector: ,Invoke (4),Row Range, Predictable (1), Effective (1), Satisfaction (1), Trust (1), Efficient (1),Not Predictable (4),Not Effective (2),Not Satisfaction (2),Not Trust (0),Not Efficient (1),Refactorings
We want to get rid of trimemptytest,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
so basically we want empty and blank in the same class. [08:51],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Cool. So we want to create a new class for those. And then move them. I am assuming - let's see if we can move those. [09:22],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Create a new class. [09:59],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Do we have a name suggested or do I make up a name? StrnigUtilsBlankEmptyTest [10:13],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
let's just move stuff 'cause it will move the things for me. We can put a comment. [11:38],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So we want to move these - there's only four of them.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you checking now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Just making sure those are specifically the ones I want. I don't need to check for more? et's see if these can be moved in bulk. I don't know if I can highlight more than one. [12:44],,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
"I: Would you usually go and check that, or is it because of the refactoring study?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I don't know if I can do multiple at a time, what I might do is move one and then cut and paste the others. Eclipse is pretty good at pulling junk out. Type is not in project make static and move - no, I don't want that. So I guess I can't move. [13:35]","Invocation
Not Satisfaction (
 (“no, I don't want that.”)
 Not Effective 
 (“I guess I can't move.”)",,0,1,1,0,0,"<0,1,1,0,0>",0,12-12,0,0,0,0,0,0,1,1,0,0,
I: Did you notice that it was called move instance method?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Hmm,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know what this means?,,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
No. I know what an instance method is but I don't know why it want to make it static. There are no variables. Foo is static. Right. [14:22],"Invocation
Not Predictable (“I don't know why it want to make it static.”)",,1,0,0,0,0,"<1,0,0,0,0>",0,16-16,0,0,0,0,0,1,0,0,0,0,
I would just assume it would move from instance to instance. Not sure why it want me to switch to static. So I will do the next best thing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You're not inspired to figure that out?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Not generally, no. [14:45] Sorry.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I find, at least for eclipse, that these things are good enough that you just insert the stuff - I'm getting a bunch of can not resolve .. I guess I should do something.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"foo is missing. In this case - we may want to import that I guess from one to the other, but I am ok with copying things from one test to another.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any cases you wouldn't have done it like this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"In this case you can tell it is just a value being used over and over, that I don't think is specific to anything. If it was something more complicated or had something to do with the logic - in this case it is just a static value. [16:37]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So it's relatively happy. We can try it. [16:51],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So I guess that was that. StringUtilsTest has a different list of things. this is clearly doing a bunch of setup in the static constructor here. So here we set up with more complex things.. if any of these tests use the static initializer - I guess we can copy it, although it would be bad to copy it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why is that bad but the variable was ok? [18:09],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The variable - well, one is clearly just a string - I wouldn't even have made it, I would've just put foo and foo. Maybe for a more complicated things - it had to be longer. But if it is longer or unicode or something I guess it can be longer. There was already the link to whitespace. It is interesting that that worked.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
et's just see if the move is going to work. [19:15],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I am old school and I often cut and paste to see what happens, because then the errors tell me what happens.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you mean?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"With the quick fix I like seeing the error, it is easy to fix it and I know what it's doing.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If I cut and paste this and I get some errors, I know what quick fix it is applying, I know it is grabbing the import or whatever, I mean, sometimes moving or extracting - you can't always see what happens, it's just here and you can't see what changed. I guess I can use git, but sometimes it is better to just plow through and see that this thing is broken. Sometimes - certainly for us, we have a lot of packages, and we use maven, and if you move something from one package to another you have to go change the pom and change the thing, and now there's the wrong junit there, or whatever, so it will break anyway I guess. [20:41]","Reflection
Not Predictable 
 (“sometimes moving or extracting - you can't always see what happens, it's just here and you can't see what changed.”)
 Not Effective 
 (“if you move something from one package to another you have to go change the pom and change the thing, and now there's the wrong junit there, or whatever, so it will break anyway”)",,1,1,0,0,0,"<1,1,0,0,0>",0,32-32,0,0,0,0,0,1,1,0,0,0,
I: How come the quick fixes are - you prefer to use those?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Because I can see it. There is usually only one or two - like out of all of these it looked like a lot of things were broken, but it is only three fixes that had to be applied.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Does it matter that it is localised? Some quick fixes like import is just within this class whereas moving is across classes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"In this case moving is less useful because it is taking things in a class and moving it to another class, and it's quite localized. No one are calling these. I do not have to rename anything anywhere. When renaming is involved, or package moving then..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Can you clarify what you meant by renaming here? ike, if there was other callers?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, if there are other callers.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: you would rename to use this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, like, moving to a different package is like a rename to me. For rename you definitely want to use something that changes it everywhere. You don't have to, but it makes your life easier. [22:16]","Reflection
Effective 
 (“For rename you definitely want to use something that changes it everywhere.”)
 Satisfaction (“it makes your life easier”)",,0,1,1,0,0,"<0,1,1,0,0>",0,40-40,0,1,1,0,0,0,0,0,0,0,
So I am looking at testIsEmpty... [22:25],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I still don't understand. Is this a regular intelliJ message?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Yep,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I don't understand! These types are all in the project, are they not? Do you know the answer to that. [24:19]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: *Explains error*,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Right, so we're just going to cut and paste. [25:26]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Is there a way to make it work? That doesn't involve me writing more code? Not worth my time.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you prefer using the tool though?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, generally.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: If it had worked?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, it's pretty straightforward. Cutting and pasting is dumb, but I have very little patience. I think if I knew this tool better. I don't know if this would have done the same in eclipse.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: It would.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Then they should just fix eclipse. [26:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What would that have meant to fix it here?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So I usually use move class. That's what I would have wanted to do. If I want to move it to another class, just move it, figure out what things are missing and tell me. Do what I did. When I move a class, I figure out how to move any import that you've got.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That's all I did.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What about this case with the variable or static setup block?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Foo I could've just referenced from the other test. I just cut and paste it 'cause I was lazy, I didn't want to change all of those [28:01]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So now you were moving them manually and it was easier to cut and paste, but if you had moved them and they had automatically been redirected, would you have been happy with that? [28:17]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It depends on why you are moving it. in this case it would have been fine. Well, maybe. ocality in tests is a bit weird. I actually think foo is in the right spot. To me, tests are more scripts, so I don't like inheritance in tests - this is very personal to me - but it makes too much stuff hidden. We have a lot of inheritance in tests here, and you're like, I don't understand what my test does. But for me that is a locality, near the test, I prefer that. In this case, in some ways I may want it here [29:18]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"and stringutilstest sounds like something that will stick around. If something changes, then changing it in one place makes sense. This sounds more requirementsy than so random string. [29:44]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"They have some kind of functional meaning and it will probably be applied to all stringutils, so having that in stringutilstest seems to make sense.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What is happening now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I deleted the ones I put in the wrong file and putting them in the right file.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did you realise that? [30:48],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I was trying to find these tests [31:00]
 to see which constants they had from the other tests, and I was surprised when I came across testStripAccents which shouldn't have been in this new file. [31:11]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You said you consider the tests as scripts, do you consider them sort of different from the main codebase then?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It depends on how you are testing and what you are testing. But generally yes - it depends on the unit tests, they can be put closer to what you are working on. But they are the ideal. In practice you get more like, I need to set up some data, check this thing, check this thing. [33:01]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Everything worked, they all ran, I'm not very good at testing so I guess this would be good enough for me.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: what did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
a bunch of cut and paste. Some class creation and some fixing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What source code changes did you do? [34:02],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I added a file, and then moved some code from two different files into that new file. [34:15]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tools that could have automated the changes you did?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I thought there would be some, but they did not do what I expected. [34:31]","Reflection
Not Predictable (“did not do what I expected”)",,1,0,0,0,0,"<1,0,0,0,0>",0,76-76,0,0,0,0,0,1,0,0,0,0,
I: What did you expect them to do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"What my cut and paste did, more or less. That would have been similar to move class or rename or whatever. [34:48]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any of the code changes you did that you are unsure if you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It all works, so I don't think I did anything wrong. You could argue about the referencing things in other classes and whatnot.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How does that compare to making it work?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Making it work is more important. Making sure that the tests are doing their job, which is testing the thing correctly. Architectural niceties are nice, but you get into bikeshedding a lot. You have to be careful that your tests don't turn into something that is horrible to maintain, but it is hard to know .. it's easier to recognize once it is horrible to maintain. It is easier to dig yourself out of horrible to maintain than prevent it. You can try really hard to prevent it, but I find it is really hard to know. You can decouple until the cows come home, but then you get something you can't debug because it is so decoupled. I really hate Java interfaces. In our code base we have a lot of interfaces, so it is interface impl interface impl, so you can do dependency injection, so maybe a time in the future they need a different impl, and there is no other impl there is one impl and one class. Dependency injection makes me crazy too. [37:43]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Right now we are having huge problems because we are having cycles and we're trying to inject dependdencies, and it's.. you end up writing large amounts of code for some imaginary injection you may not even do.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Interfaces should be interfaces. [38:16],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Task 2 [38:29],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you checking in the code now? [41:43],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm looking at the implementation of the various methods. The ones we want to keep are unfortunately implemented with those that we are going to remove.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Before you get started, how are you planning to solve this task? [42:46]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"ook at the various implementations, and in this case these methods are implemented in the methods we are removing, so I want to make sure that I can satisfy that before removing them. [43:09]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I want to make sure I can implement them separately. When I know that they work I will remove these. [43:34],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I should actually make sure as well that we have some tests. [43:47],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
We're looking at isAllBlank [45:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Why is isAnyNot the opposite.. [46:54],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
In this case we probably just want to move this into isAllBlank or just rename this one. [47:22],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What would you rename this one to?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Renaming this would be hard.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How come?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It is what it is - is there any not blank. [48:19],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"We basically want something similar to the other one. We can cut and paste or we can rename this one and fix this, rename it to isAllBlank and fix this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
this may just be easier..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you mind explaining what you are doing? Are you reimplementing?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes! It is easier.. it helps me think it through.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is this to help you think or is it part of your solution?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It may or may not be part of my solution. [50:54],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm not an expert in streams but I prefer them. [51:46],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Anyway, I can turn it into...",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't understand why introducing a local variable would matter.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"oh.. maybe it was getting a null in css, that is probably something I should look at. [56:05]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
We'll just copy that from isAnyBlank to isAllBlank. [56:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What was the last thing you did now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Just checking for null on the input there. [58:03],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
...that's a different type.. hmm..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't know that much about the argument array. I guess it can still be null. [59:26],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you checking now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What everyone else is doing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: the other methods?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah. [59:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
..this is why we don't do refactoring.. [1:00:30],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Somehow string null, string array is null..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That worked. [1:03:29],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm curious if .. my stream handling is the problem.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Now you are removing the things you previously wrote?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes. To me this reads better, makes more sense. [1:04:52]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I had been trying some things a bit randomly, but this works the way I expect it to - the cut and paste was the dumb part it turns out. [1:05:21]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So here it will be similar.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so the null handling is the same. [1:05:40]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"In fact, there may be a bug.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah I just cut and paste the one I just wrote. Just swap this out. et's test that and go back and think about the bug. [1:06:27],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you doing now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm adding a test. I'm using isEmpty as a test for a single item and that's not .. blank there. Empty null or white space. So it should accept whitespace, but it won't accept it. [1:07:52]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That's just the tests*,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now this is going to get angry.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
They're all pretty localised.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Where is the error list?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll run the tests.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Too much. I picked one of the methods and played around with it, reimplemented it after having looked at the others. Tested it. The pattern was the same as the other one, so I copied it and made the change",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"and then deleted the method we were supposed to get rid of, removed the appropriate tests after checking where it was used.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tools that could have automated any part of this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Deleting methods, maybe. I didn't actually look if there was a delete method. I would look at where it is being used, to verify that it is being used the way I expect it to, and then sometimes I'll just delete it and get the error messages and figure out each one. Although then .. in that case you need to know that you have all the modules and such.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: When you started out you said you could either rename the method or move its implementation. Then you ended up reimplementing it. [1:16:00],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I thought it might be renameable, but .. it has the same. I guess it depends on where it is being used. It has the same signature, so you could rename it pretty easily and it is being used. You would still have to go through and change the ones..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you use a tool for that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't know that any tools would know to do that.. if I had to chage a lot of places I may use a tool but it would be sed or a unix tool. [1:17:03],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Have you used the rename tool?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, but in this case, isAnyNotBlank is not the same as is all blank, so you would have to go and prepend an exclamation mark everywhere. To me, that is more of a text replacement.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What about the approach you mentioned of moving the implementation? [1:18:02],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah I was thinking of copying that implementation to the other one, but then I thought it was better to think about it from first principles. I didn't want to throw random things in there.. it was easier to think about isAllBlank. I don't even want to think about isAnyNotBlank. Double negatives like that is so hard to think about.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I just wanted to start again - I'll start from isAllBlank, that is easier to understand conceptually.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tool that could've helped you move the implementation. [1:19:16],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"You can probably pull it out into a method, if I knew there was some part of it I wanted, pull it into a method and use that. [1:19:41]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Was there any of your code changes that you are unsure that you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I feel pretty sure about it since I got the tests. Having the tests and feeling like what I did made sense. I am assuming isBlank is going to work, isEmpty will work. [1:20:30]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you feel confident before you ran the test?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Task 3. [1:21:15],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Do we want to get rid of the entire thing? So we're keeping fieldutils but we're getting rid of forceaccess and want it to assume false. [1:23:14],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So we have to keep the parameter there?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: no, feel free to remove the parameter.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, we can remove the parameter. There are a bunch of foceaccesses there. And there are tests here. [1:23:39]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm looking at the tests, where we are using the true flags.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
we are going to expect these to fail when we make the change because it is a breaking change. [1:24:31],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So we want to get rid of that. Do we want to change the tests or delete the tests?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
This is definitely a bigger change because it is changed everywhere. What is interesting is that the tests are forcing access in a lot of places and I'm unsure if it is strictly require or not. Here we are definitely testing forceaccess stuff. [1:26:05],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm more of a dive in headfirst kind of person, so I'll just .. mess with this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'd probably do this manually.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How come?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't know of any tools ... maybe change signature.,,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
"et's see... used in body, show conflicts..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are these conflicts telling you?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That it's used in the method body - I knew that. And.. this is defined ... Oh there is already one defined that way. We already have a getfield that does the same thing with a default.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would end up ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And now there are errors.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do just now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Conveniently the two parameter version of the method was just above it so I just concatinated it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If it wasn't just above, what would you have done? [1:28:51]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I might have deleted the other one and then seen if the method rename - or signature change would work.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So because of the positioning you did this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now. .. if false.. go to the next one.. [1:30:00],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
We don't care about forcing..we're not going to force it to accessible.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What made you decide you don't need that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
This is never true. The question is .. let me get rid of that. [1:31:09],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So you're telling me now that you didn't check beforehand if anyone used this method, and now you found that some are.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah. It is annoying, but it's probably some we are going to have to change anyway. et's see what happened to the test. [1:35:41]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What made you decide to only update that one?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I changed them in methods that are going to change anyway. I want to see what getField is changing - I don't want to do them all at once. The plan is to do one first and see what happens. Now I am going to the tests to see how many things broke. [1:36:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I mean really - these should all fail. I guess this is tested already. I guess not. So we could test some of this. These will ... this is annoying.. THIS is annoying. [1:37:17],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I might actually highlight and .. not sure what's better. [1:37:42],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
...that still worked? Really moving me around up here..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Now the test is failing - is that what you expected to happen?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yep. They should fail because I guess these are all...,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I mean we could just delete these or we could try to moving on.. [1:42:07],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: For the sake of time I'm fine with you just deleting it. [1:42:18],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
These probably are the same..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Some of these broke but that is from my refactoring. [1:43:14],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so we want to do the same for any of these forceaccess..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
et's see if there is a similar pattern. I'm curious about trying a refactoring for this.,, Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
yeah.. or not.. if we force access...,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So that would've at least fixed up fieldUtils. [1:44:54],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Similar I guess.. same as before testGetDeclaredForceAccess. [1:45:18],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll just ignore that one and the getDeclaredField.. readField. [1:45:39] not used..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Not going to.. delete.. just two places.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
At this point I think Ill just ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
readField...,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"[1:47:27] 
 I: For the sake of our time I'll stop you now. I am seeing this pattern...",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What changes did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"In this case, the changes I made were usually deleting one method, in this case the one I actually wanted - deleting the method signature in the way, changing the method signature of the one that wasn't and then fixing up various tests or places that used the feature. [1:48:12]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know any tools that could've automated this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I tried using the refactor tool, change signature. It is all right, it is useful I think when you are changing a lot of places. In some cases, it was not so useful because it was as much work to run that as to go and change those places.","Reflection
Not Efficient (“it was not so useful because it was as much work to run that as to go and change those places.“)",,0,0,0,0,1,"<0,0,0,0,1>",0,211-211,0,0,0,0,0,0,0,0,0,1,
I: What did the tool do? [1:48:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What it said on the box. It removed the parameter from the method I asked it to remove it from and from any caller.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that what you wanted? [1:49:03],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"In this case yes. I mean .. it wouldn't know how to fix the code anywhere else. In this case it was fine, it is what I wanted to do I think. [1:49:22]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any case in which you can imagine that you would not want that to happen?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No I think that is what I expect change signature to do.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And you used select-find-replace right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I used it for one block of things where I hadn't used the tool. [1:50:00]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: if you were to do this task again, how would you go about solving it?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
similarly. I don't know. This wasn't too bad - the changes were pretty localised. If it turned out there were a lot of changes in a lot of places that would change how I would do that. [1:50:49],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Can you talk a bit about how you organized the order of your changes? For example, you used the errors, but sometimes you fixed the errors and sometimes you moved on.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I kind of just dived in, I started randomly - at the top of the file with getField. [1:51:49]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"With the tests I was only interested in the things that affected. Not all the tests pass - and I was going to come back to those when I fixed up the other ones. I was most interested in the tests I was working on, for the method I was using on - I knew I was going to change all of these so it would be come relevant once I got to them. But I wanted to make sure that the ones who were obviously related to thing I was working on was changed, so I don't get too far down the path and then realize nothing works. Then having to back it all out or realize I did the wrong thing entirely.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What would you do if that happened?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Hopefully it wasn't other things I was doing at the same time, so I would just revert everything.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
If I was on a branch .. source control. [1:53:17],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to do this, how would you keep track of your changes?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Source control. [1:53:31],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: what kind of refactoring tools do you usually use?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Very few. Usually just rename and - that is usually just rename of variables or methods. Sometimes class moving. Those are the top ones by far. [1:53:56],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Those are the biggest ones. Sometimes you'll extract method, that happens now and then.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you usually use a tool for that or do it yourself. [1:54:23],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would usually use a tool, mostly to get function signature. It is pretty good at figuring out what needs to be passed in.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Does it happen that you have to change it after?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Sometimes. Usually it is fine. I don't use it that often, but usually it is ok. There is some loop or something I want out. [1:54:58]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know about inline? Inline method or variable.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"ike, I know the concept but I don't know about Java inline.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of a refactoring that does it?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: It replaces a call to a method with its body. You didn't know of that one?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: When you avoid using refactoring tools, you mentioned you don't use them a lot, why is that? [1:55:59]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"For refactoring, I use rename a lot and move semi-regularly, and move, and those are things I do regularly so I'm comfortable using those. [1:56:13]","Reflection
Trust",,0,0,0,1,0,"<0,0,0,1,0>",0,245-245,0,0,0,1,0,0,0,0,0,0,
I: Was that move class? [1:56:13],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Move method?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Not so much. I don't think I move methods that often. And I don't use the other ones that often so I don't know how they work. It can take just as long to figure out what it is going to do or how it does it, and I don't know what it's doing.. Not familiarity. Usually when I am refactoring, it is not easy. It is a complicated thing. It's more like the any-not-any-is-not. Stuff like that, where I have to think it out, and I'm changing something. Usually the refactoring..it is closer to rewriting than to refactoring. You know, it's like, we're not using a list, we need a queue. So now we put a queue in there. So there is more semantic changes, and no tool is going to .. I'll need to look through it. I have to look through it. Unless it showed me exactly what it was doing so I could look through that - that would be ok.","Reflection
Efficient 
 (“It can take just as long to figure out what it is going to do or how it does it”)
 Predictable (“Unless it showed me exactly what it was doing so I could look through that”)",,1,0,0,0,1,"<1,0,0,0,1>",0,249-249,1,0,0,0,1,0,0,0,0,0,
I: What do you mean by showing you exactly what it was doing? [1:58:17],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
If you could preview the change.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Here you used the preview.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Probably a more powerful preview. I want to do the change, but I want to know what it changed. It's more like, highlight all the lines that you changed to purple and keep going until I say stop.","Reflection
Not Satisfaction 
 (“a more powerful preview.”)
 Not Predictable (“I want to know what it changed”)",,1,0,1,0,0,"<1,0,1,0,0>",0,253-253,0,0,0,0,0,1,0,1,0,0,
I: That sounds a little similar to how you were using find and replace.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah. Something I can still interact with. [1:59:24],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
fin,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,