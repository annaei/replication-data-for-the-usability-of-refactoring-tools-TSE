I: What are you looking for now?,,,Predictable (16),Effective (4),Satisfaction (6),Trust (1),Efficient (2),Vector: ,Invoke (17),Row Range, Predictable (6), Effective (0), Satisfaction (1), Trust (0), Efficient (1),Not Predictable (10),Not Effective (4),Not Satisfaction (5),Not Trust (1),Not Efficient (1),Refactorings
"I'm trying to see the structure and quality of the tests. Like, do I trust them?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And what are you finding?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"They're written differently from how I would write them but that's ok, that's fine. If writing code is kind of similar to writing prose then we all have our own different ways of writing things and expressing the same ideas. The reflection tests I'm curious about. But I don't know if I actually need to care about this just yet.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It all makes sense. I'm ready for the first task.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
T1. [07:35],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Okay. So we are only caring about the test classes here, not about the production code at all. So let's open up StringUtils.test.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How do you plan to solve this?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"What I'd like to do is to extract that one - go method by method, pull them into their own class like extracting methods into a new class. I'm going to take care of any shared setup and cleanup as well, but moving - like - move one method at the time, run the test, make sure it still passes. And then continuing on method by method.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm going to take a look - and close some of these.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
tests only empty and blank.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Move instance methods.. All candidate variables have types that are not in project, make method static and then move .. I don't actually know what that's saying.",,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
I: Is this normally how you would have tried to do it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That is a good question. With several static variables as well. I don't actually need the static variables in any of this.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would probably make the class first, and then move it into that class, rather than move and create at the same time. Do you want me to proceed in that way?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Yes sure, you are not in any way bound to the plan you made.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No. Silly.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Uhm, I don't really want to make this static. But this also gives me nothing. Ah, ok sad.","Invocation
Not Effective (“I don't really want to make this static. But this also gives me nothing.”)",,0,1,0,0,0,"<0,1,0,0,0>",0,18-18,0,0,0,0,0,0,1,0,0,0,
I'll make a new Java class I guess then. StringUtils - let's call it empty and blank. Unit tests for methods of StringUtils which been moved to their own test classes. Ok. Cool.,,Create class,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So then, heck, if what I want to do isn't working well, let's move it. Let me move it correctly here.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Great. Cool. So that isAnyNotEmpty. Let's go for isAnyEmpty. I don't really know what these comments are going for here. No, that's not really. Maybe you need a testing constructor. No sorry. What I want to do. I should be able to move it.",,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
I: What did you expect this move refactoring to do here?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's a great question. I would expect that move refactoring to be able to move an instance methods between two classes. And when it's talking about like, all candidate variables have types that are not in the project, I don't really know it means by candidate variables.","Invocation
Not Predictable 
 (“I don't really know it means by candidate variables. “)",Invoke (Move),1,0,0,0,0,"<1,0,0,0,0>",1,23-23,0,0,0,0,0,1,0,0,0,0,Move
I: Have you used this refactoring before?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes I have.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did it work then?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It pops up - I'm used to it popping up a dialogue that contains all the methods and fields in this particular class and with like, checkboxes, and I'm able to either move or copy them - depending on whether I choose move or copy - to another class in another package. I'm also used to it working - Oh, I could potentially copy the class and eliminate the other methods that I don't need.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Right, as as alternative strategy?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, that's probably faster than what I was doing here. I want to try that. Ah, great. I can probably just use git to clear that out, right. I admittedly didn't check - great that looks pretty fine. Awesome.",,git revert,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Now you're using git to reset all your changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that also a normal part of your approach?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Uhm, yeah. Like, making small commits and - there was an article intentionally contentious - about you should have your test suite either commit or or check out your changes. So you should make a change, run the tests, and if that is successful, you should commit it, and if it is not successful, you check it out immediately, which - again, not an actual suggestion, but a delightful experience. Ok.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So let's go here and copy this, look at it go, ...blankTest,",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm ok, ...ok, I was worried I made the IDE sad.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ok so that's from the stringUtilsTest. So that's going to be the reduction.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"anyEmpty, IsAnyEmpty, IsAnyNotEmpty, IsNoneEmpty, IsAllEmpty, IsAnyBlank, IsAnyNotBlank, IsNoneBlank, IsAllBlank",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
This test I don't need. This test I don't need. Oh man there are so many. Ah I should have checked that first before going with this copying.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What is that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would have checked how many tests were in one file before going with the copying strategy.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would that impact your strategy decision?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If I make a choice based on, I think it'll be faster if I do it this way, then I should probably have measured what I was going to do first. So I verified that there weren't actually any helper, private, methods in there.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How did you verify that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
By going through the structure of the test.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And I see that there's still a whole bunch of orange sad marks here, but there's nothing red, so it still compiles. at the very least. Lest go to the top of the file and hit ctrl + shift + r to run the tests. It's compiling everything ... that's all fine and dandy. it's going to complain about - can be private, I'm sure that's fine, and stuff that's never used.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ah, really? I would have expected it to say, I could remove all the unused things for you, but I don't see that there. No. Ok. Well, before I do that, I'm going to take a look at the StringUtilsEmptyTrimTest. Test one - let me not make the same mistake again. What kind of stuff do we have in here. [20:11] Type migration, make static. No. That's really frustrating.","Invocation
Not Satisfaction (“That's really frustrating.”)",Invoke (Move),0,0,1,0,0,"<0,0,1,0,0>",1,46-46,0,0,0,0,0,0,0,1,0,0,Move
I: Why is that frustrating?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The - again I don't really know what it means when it says candidate variables. Having the different types that aren't in the project, that doesn't mean too much to me. Like, I understand the thing about the type in theory, but what types are in the project. [21:14] Making it static and then moving it - like sure, let's try this. Sure. But I don't need it to be a static method. Okay, so, let me - before I make any changes there, let me be happy with my brand new file there. I know there are some trailing whitespaces they were already there. Ok.","Invocation
Not Predictable (“I don't really know what it means”)",,1,0,0,0,0,"<1,0,0,0,0>",0,48-48,0,0,0,0,0,1,0,0,0,0,
"So this is StringUtilsTestEmptyBlank Great. That's, I'll just be me for that commitmessage there.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you mean?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It prompted me to fill in my git name and author. I don't care about that for the purpose of this task.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Great, so before I proceed further with the trimEmptyTest, let me actually go and remove them from the stringUtilsTest. Great. They were the first several ones. anyEmpty, IsAnyEmpty, IsAnyNotEmpty, IsNoneEmpty, IsAllEmpty, IsAnyBlank, IsAnyNotBlank, IsNoneBlank, IsAllBlank",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Great.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, and then all of these tests pass still, hopefully, they should I didn't remove anything else. There are so many errors here.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Warnings right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, that's what I mean. It's pretty distracting.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Yeah, I could have changed the settings for that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, I like my code be free of errors. So that like, it doesn't tell me much of the entire code is under warning.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"One, two, three, four, five, six, seven, eight. Perfect, and those are the right eight. [24:50]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Awesome. So let's go take a look at TrimEmptyTest. We want to move these four methods. They're only using stringUtilsTest. They are using a StringUtilsTest.whitespace there. That's fine. They are not using - they are using foo. Ok, great. So if I'm moving them into my isEmptyOrBlankTest, let's go .. let's copy these four into this. Let's run all of these tests right now before I tweak anything. Ok, nice.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, run the tests one more time. Just moved the - that's ok; that shoudl be ok. So we should be able to take these out here. Nope, I need the foo, forgot I had the foo selected. Awesome. [27:17]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"There are so many of these that are never used. Ok. I don't think I need to test the constructor in here. That's not part of it, right. [28:19]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so move methods from stringUtils empty or blank test - nope, emptyTest.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, I think that I have completed the first task.",,git diff,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What code changes did you do in order to complete this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I moved individual test methods from one class to a brand new class.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You tried to use some tools for this, but that didn't really work out. Would you usually have used tools?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Usually yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: I'm curious about how you changed your strategy: you first tried one way, then you decided to change, why was that?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The first strategy, where I tried to move individual methods over, did not work as I was expecting, so I decided to change it.","Reflection
Not Predictable (“did not work as I was expecting”)",,1,0,0,0,0,"<1,0,0,0,0>",0,70-70,0,0,0,0,0,1,0,0,0,0,
I: Can you elaborate?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Sure. I could have sworn remembering to use that particular refactoring tool to do the task that I wanted to do. And the error message I received did not make sense to me. I probably should have asked you if like, querying what that error message was would be within the params of this particular setting.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So at some point it seemed like you made your decision to actually change your approach. What was the factor that actually made you change that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"One of them is the desire to complete the task within a certain amount of time. Rather than chasing the move tool or, maybe I'm not remembering that that's the right tool that I used last time, and I could track that down, but having thought of another approach - part of my main goal is to not need to do things, like, to not change behavior. Like, when I'm copying and pasting code around, I want to make sure that any relevant helper methods, or any relevant fields, or any setup or cleanup also are copied over. I don't want to miss those or leave them behind unnecessarily. So I would hope that if I have a test method, or four test methods, and those methods use a shared private helper function, and none of the methods in the original class use that helper method, then my refactoring tool would know to also move that fifth method over.","Reflection
Not Efficient 
 (“the desire to complete the task within a certain amount of time. Rather than chasing the move tool”)",,0,0,0,0,1,"<0,0,0,0,1>",0,74-74,0,0,0,0,0,0,0,0,0,1,
I: That's something you would like?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's something I would expect, yeah. Rather than, if they're invoking a private method, and I want to move them into a new class that's only going to function, if I also move over that private method, otherwise my code is not going to compile.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: That's true, or you could increase the accessor.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Sure, but that involves changing what other classes has to know about the initial class.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: even though no one else refers to it, so it would it wouldn't change behavior",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Sure, but it changes the understanding, right. It would violate the interface segregation principle. If I need to increase that from a private method to a public method. Like, again, these are test files, no one is calling into the test files, no one cares about the test files, but like, from a general OO perspective, if I have additional public methods that like, really could be private methods, or could be public methods of other classes potentially. Like, having them as additional public methods in my original test class, is that like, why is that public, what's going on here, do I need to care about it, if that signature changes, do my code need to be recompiled, even not concealing that method directly. Like, increasing its visibility, for a few different reasons, isn't the approach I want to take there. I would want to move it into the new class if nothing in the original class is referencing it. If parts of both classes would want to reference that same private method, then like, great, that's a great opportunity to extract it into it's own, separate self-contained class.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Would you expect the tool to initiate that as well?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Would I expect it? No, because that sounds like some secret next level tech. Like, that would be smarter than any refactoring tool I have used.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to normally do this, or similar kind of task, how would you normally organise the code changes you did?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What do you mean by organise them?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you keep track of them? For example now I saw you were switching between this window and git - is that part of your normal workflow?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, that's part of my normal workflow. I also do like keeping - as soon as there's more than a few different things to do, specially if I'm doing a few different refactorings at a time - I like to keep a list of what I'm working on, and like, let's complete this refactoring before I go to another separate or tangental refactoring.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: An actual list?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"On paper or digitally, depending.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How does that work?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It can be as simple as pulling up a notepad app, I don't need to save a file or anything like that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The fact that you have them already printed out and written down is great, it saves me from writing them down.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: I'm curious about your decision to use git to reset the project rather than undoing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Sure. Yeah, that's a fair question. When undoing there's, like I know IntelliJ keep different undo buffers for each file I keep open, and I knew that I had a few files open at that time, so I could either remember which file I was in, even though it's written down, even though I know what file it is, but like, generally, if I have a choice between that. I've moved things between a few different files, I've created a new file, I wanted to start from scratch from a known good state. I could go through a few different undo steps in my IDE, or I could rely on the tool - like git - I came from a good state, it's very good to revert back to my past command.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
T2. [38:13],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"...bloats the API and are awkward to use with the double negated names - that's very true.. 
 Uhm.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You may look around before you form your plan, but I'd like to hear it before you start changing the code.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok. Let me go to the StringUtils.java, Look at how big that structure is! isAnyBlank, isAllBlank.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't really know why I need to locate those two methods if I am removing the other two methods.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: That's fair. You may move on.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, I have located them. They refer to isAnyNotEmpty and IsAnyNotBlank. How embarassing.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"In order to remove these methods, I am going to make sure that.. So these are public methods, these are in a publicly used library and all that, so I'm going to assume that we have issued deprications and all that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You don't have to worry about clients or other users, you just have to worry about this particular codebase.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok. So if I am removing methods I want to make sure that the tests are ok with me removing them, and I want to make sure that the production code is ok with me moving them.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you refer to as production code?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Not test code. Things that would run in production. Assuming that you're running your tests in production.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"We first need to make sure that no parts of the production code is referencing this at all, to make sure it's safe to remove. I plan on - an easy way to do that, assuming I don't care about external clients and things like that - is to just inlining the methods. I know that IntelliJ lets me inline methods with all of its occurrences and/or keep the original",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Which option are you planning to use?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"[41:31] Normally initially I would - it depends on how many occurrences there are. If it's like one or two occurrences i usually say like, fine, and get rid of the original as well - BUT in this case, I'm going to want to keep the original as well, because I think these methods are tested. And if I find - oh man, there are so many tests, I can't just cmd+shift+t. so sad.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So that's me using the shift shift to find everything, and I'll see if there is a method for testIsAnyNotEmpty. So I can't just inline and remove because my tests won't compile. I don't want to like change my production code and change my test and then run my tests and see if everything is fine.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"A lot of my work is in ruby, so I can get away with not having things defined when I make statements like that. And then, so I would do that, I would keep this, then I would remove the body and see that the corresponding tests fail, and then I'd feel comfortable removing - like if only the tests for isAnyNotBlank fail - then I am comfortable removing the whole method definition and the tests themselves.",,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
So Inline Method refactoring is not supported when return statement interrupts the execution flow. So sad. [43:31],"Invocation
Not Effective (“not supported”)",,0,1,0,0,0,"<0,1,0,0,0>",0,111-111,0,0,0,0,0,0,1,0,0,0,
"I mean that makes sense to some degree. I know that this refactoring tool, whether it is java or like rubyminds version, gets sad and confused when there's a few different return statemtemt. This itself refers to isNotBlank, which I think is fine, we're not touching isNotBlank. So, how many usages are there of this -","Invocation
Predictable (“that makes sense to some degree.”)",,1,0,0,0,0,"<1,0,0,0,0>",0,112-112,1,0,0,0,0,0,0,0,0,0,
"I: By the way, how did you expect the inline tool to actually inline this, or did you expect it to fail like it did now?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"[44:30] I hadn't expected it to fail. I had expected it to pop up the dialogue box asking keeping or removing and when it tells me the return statements make the execution flow confusing and I can't do it automatically I go like, yes, that is concern that you have.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Right.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Let me split these vertically so I can take a look at - this is anyNotBlank - I want to keep isAllBlank. Nope, not there.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Right. Ok. 'Cause it's going to be tricky to line it potentially, here.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why is that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"[45:43] I can understand why the different return statements and having the returns inside the for loop would make it difficult to have a cute little inline here, that's not really awesome. Uhm. I could be really cheeky and just drop visibility for this.","Invocation
Predictable (“I can understand why..make it difficult “)",,1,0,0,0,0,"<1,0,0,0,0>",0,119-119,1,0,0,0,0,0,0,0,0,0,
"I: Yes, that's correct, but for the purpose of the task I would prefer that you solve it in another way.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Fair.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that what you would do btw?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, no!",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah. IsAnyNotblank being functionally equivalent to isAllBlank,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Uhm.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[47:25],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, let's look at the structure of the method in order to help us break this down. We start out by checking, is the thing actually empty itself. Heck, rather than guess. It's in arrayUtils, so, the length it zero, it's a char sequence so that makes sense. It's a series of charsequences?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: it's an array of charsequences.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah. So if that's empty, it is false. And then we go through all the different charsequences and we ask if any of them are not blank, we return true. How surprising. it's almost as if that's what it says on the top. Failing that we return false. Gotcha.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So then we say let's return not is any not blank.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm trying to see what we can do in order to untangle the multiple return statements to see if we could .. let me find that error message.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
is not supported when return statements interrupt execution flow.,,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
"It slightly changes mechanics if we extract the return value into a variable and just have a single return at the end of the function. It changes it because we are then invoking isNotBlank more times than we potentially need to. I would probably make a judgement call as to whether that is ok or not, whether I am fine with that - at least temporarily. I would then be able to extract that local variable and then extract it into a single return and then i would be able to inline it. But does that change semantics too much for what you'll like?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: No, not at all - you can do whatever you like.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, just to make sure that I understand that this is actually the issue here, I'll cut it, and check if I can inline it. Ugh, still not happy with that. Even thought both of these return false and it doesn't actually matter. [51:10]",,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
"Ok, cool. No wait.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, let me also test my .. let's do this.. sorry, parden by, I'm type inept, in java",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: boolean,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
thank you. great. Just making sure that this is actually the issue.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So, are you doing this change because you think it will help move you directly towards the solution, or to help you think.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It's to help me understand why I can't use that particular refactoring.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you are essentially debugging the refactoring tool?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
A little bit yeah.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"What am I doing wrong here? Again, this might be .. I don't know if this is java. I would expect for this to save to that local variable and then return that local variable.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Yeah, I don't know why that is not working.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's fine, it just takes a second. Ok, how exciting. This is more what I expect, this inline all, and remove the inline all. Which makes sense. And I preview it, cool to see the implications, one here, one in the test. Which is cool, that makes it easier. Ah, do I really want to do it in the test? Just yet?","Invocation
Predictable (“This is more what I expect”)",Invoke (Inline),1,0,0,0,0,"<1,0,0,0,0>",1,146-146,1,0,0,0,0,0,0,0,0,0,Inline
"I: Sorry, I'd just like to hear why did you cancel that one?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, sure. I cancelled it because I don't want to inline it into the tests. I want to come back here and think about why my next move was going to be. Understanding that it's still there, I can still choose it at this point, and I don't lose anything there. I could however just hit the delete key at this point and just not do this. I'll do that refactor, and remove my redundant imports. That's fun.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What was that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ending up with the delightful return not result - which is what I expect considering what the structure of isAllBlank was. So I could at this point put back in the multiple returns, which is probably what I'm going to do, because this is basically the state I want it to be in. I don't have a clever automated way to inline the negation. So I can do it here.. And then I want to - where is this being used - it's being used in this file, in this test file. Great. Awesome. Right there it is. Cool, let's run the tests and see if it works. [56:07]","Invocation
Predictable 
 (“which is what I expect considering what the structure of isAllBlank was”)",,1,0,0,0,0,"<1,0,0,0,0>",0,150-150,1,0,0,0,0,0,0,0,0,0,
"Oh, that's terrible.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ok..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What's that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm going to do some undoing right now.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So I inlined the method, and I said don't bother inlining it in these 9 occurrences. And the refactoring tool said fine, I'll leave you with this broken code base.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And that's not what you wanted?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's not what I wanted. What should have done I guess, was to intentionally keep the original, then on the like, second completely different page, where the panel pop up at the bottom with the find results - not the find, whatever it is -","Invocation
Not Satisfaction (“That's not what I wanted.”)",,0,0,1,0,0,"<0,0,1,0,0>",0,157-157,0,0,0,0,0,0,0,1,0,0,
I: Usages?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, exactly. like then, say like, here are the nine occurrences I don't want you to change. But I had already committed to inline and remove by the time I got to the ones at the bottom, the preview panel at the bottom, and I was surprised by that. I was surprised by this inability to resolve this method. I wouldn't expect my refactoring tool to leave me in a state where my tool does not compile.","Invocation
Not Predictable (“I was surprised by this inability to resolve this method.“)",,1,0,0,0,0,"<1,0,0,0,0>",0,159-159,0,0,0,0,0,1,0,0,0,0,
"[58:00] Right, like the refactoring tool can do safe easy stuff where everything is fine, and being like, I'm not necessarily sure, like, at least the logic is the same, or like maybe the logic is the same but there may be some small semantic differences - and like I've seen ruby mind be like, hey this does have semantic differences. So I am particularly surprised that the refactoring tool leaves me in a state where my codebase does not compile.","Invocation
Not Predictable (“ I am particularly surprised that the refactoring tool leaves me in a state where my codebase does not compile”)",,1,0,0,0,0,"<1,0,0,0,0>",0,160-160,0,0,0,0,0,1,0,0,0,0,
I: Without telling you?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah. Like, I find that out by running the tests myself. Which also actually tells me that I didn't run the tests before inverting that, which is like, c'mon. I teach people how to TDD so that's not ok.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, let's undo and start again.",,Undo,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[58:59],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oof, at this point I don't even know which parts to undo like which files to do the undoing in. So I'm going to fall back to git.",,git revert,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Why do I have staged stuff. There was a problem with the editor. Oh that's sad.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: It didn't commit?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so that did successfully commit.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, cool, great.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
awesome.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, let's try this again. [1:00:13]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It's going to be isAnyNotBlank. Let's - yeah, let's capture this. No. That's pretty redundant, but I'm going to keep that just for posterity. Uh. Great. Ok. So let's Inline all and keep the method, preview this, I don't need it in these, thanks, let's double check this, let's do this refactor, inline that method, removing redundant imports, that's great. This compiles successfully. Does this compile successfully? Still going. While that's going let's build the tests. This little macbook air is so sad.",,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
Oh no two tests fail. Some NullPointerExceptions. [1:02:19],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That makes sense! Of course. The whole point of that like isEmptyCheck is ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Like we're passing in empty array of strings,",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No. That's not even.. Ok, sorry that's just Java. We're casting null as a String and we're casting null as an Array of Strings. So let's make sure we're putting this in first. Uhm. Let me first invert this. Let me make sure I didn't break anything else. Why did the isAnynotBlank fail out of a sudden. Yes, ok that makes sense. I am ok with that. I had already forgotten about that. So let's run this test again.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
To make sure it fails at the same spot still. And then let's put the multiple return back in.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Sorry if this is taking longer than you expected.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Oh no, don't be sorry. I'm not measuring time or anything.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So let's build and run again. Ok, that's exciting, all the tests pass there.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I didn't really need to rerun the tests again there.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Great, so let's",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm going to remove this now. I'm still satisfied with the tests. These are sad, so they are gone. And then let's do the same with it's allEmpty. [1:06:12]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
This should be very similar. It is the same structure right.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm going to do the same sequence then. I know that this is completely redundant, but.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, I did it top to bottom. But really when I'm thinking about it I'm moving this statement up to the default, 'cause this is effectively a default value. And then if it is overwritten by either of these then it remains overwritten and it gets returned.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"When I do that, the - testIsAnyNotEmpty is here - let's run that. The null check is going to fail at furst, I'm sure. I removed the null protection. Sure. Let's see what happens with the non-nullchecks though.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Nullchecks aside, I know that, let's keep going. Inline this. Keep the method, do the preview, the test usage, that's what I'd expect to see. Oh, hm, sure, let me uncomment that, just to make sure that, it shouldn't necessarily, I shouldn't need to worry about that, because I'm not going to inline it there anyway, but if it's code let me treat it like it's code and not like it's comments. Do refactor. Pretty sure I chose to keep this time around? I'll go back to isAllE .. there we go. And from here to testIsAllEmpty. These null-tests aren't going to go well. Comment these. And the nullchecks do fail like I expect them to.",,Invoke (Inline),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Inline
"I: So now you uncommented them and you rerun the tests, why was that?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I want to make sure that they fail.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So, if they were to pass now.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would be terribly surprised. My understanding is that this early return exist for the NullPointerException.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So this failure is what you wanted?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes. I totally expect this NullPointerException, so I can then know that when I'm putting in the multiple return points it succeeds as expected. So this here, if I say return false, I would expect that to make the test pass. We don't really have checks to declare how many times isAllEmpty was called. Unless we do? What? Oh of course. Oh Of course. Right there. What I had done last time was change the negation before trying to put that back in. So let me cange the negation here. [1:12:47]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Run these test - I've taken out the early return still. Great, that's the NullPointerException I expect. If I change this to return true.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you expect now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I expect the tests to pass.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: What are the value of the tests now as you expect them to pass or fail; somtimes you want them to pass, sometimes you want them to fail, and you keep rerunning them as you make small changes to the code, what is that?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It tests my understanding of the code and the changes I make. I am not changing these tests at all throughout what I am doing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that important?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It is important. They are specifications, and so by not changing the specifications I make sure that the behavior I care about still happens. Like, these are properties provable of the system.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So I'm going to finish this one remaining early return. I am going to inline my - inline the variable there. Run the test one more time.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"During a lot of the, like, make the change, run the test, make the change, run the test, is part of my TDD workflow.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: But it doesn't actually check your code in a sense, it tests what you're..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It depends on the quality of the tests. You'll note that at no point here do I care how many times I am calling isAllEmpty. There is no functional difference - like I don't need the early return according to the property of the system that I care about in the tests.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: For the sake of time I'll suggest that we move on.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think I'm done with the task.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Ok. Do you want to just wrap this up and make the tests run, because we are going to continue with the codebase.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
yep. sure.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[1:16:04],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Please describe the source code changes you did in order to solve this task.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I failed to inline automatically so I changed behavior by removing some early returns, which resultet in some tests failing temporarily. I inlined the methods into the isAllBlank and isAllEmpty. I didn't actually remove the methods that I was supposed to remove, as I'm verbally describing this now. isAnyNotEmpty. I haven't finished moving this yet. But I can do this right now.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So I removed the early returns, inlined them, and replaced back the early returns, and the tests reminding me for one of the two early returns, not the second.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Again I noticed that you used git actively as part of your workflow. Would you usually have done that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you have gone about this task if you were to do it again.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I would do the same thing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
T3 [1:18:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Cool let's go take a look at that.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"There is overloaded getField and getField with a final boolean forceaccess. Using the setAccessibleMethod, ..will only ..match public fields ..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Some validations, check out the class hierarchy, ... forceaccess. And there it is. If it is - if it's not public. Ok. Remove the option to forceAccess from FieldUtils.java. Great.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Before you get to it, to make sure that we're on the same page, can you explain what this task is asking you to do?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I believe that the task is asking me to - so the option to forceAccess should not be available, and all code should perform as if the flag i false, yeah does that include changing the signature on getField?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so the signature on getField no longer need to be overloaded.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
OK. There are a few other ones. Would you want me to work on all of them?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, great. I know there are refactoring tools that can change signatures, and I know that when you are adding a new field into a method signature, you can provide a default value. Uhm..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That can get kind of ugly depending of the language version or language variant of IntelliJ you are working on. Whether it becomes a default value in the method declaration - like in RubyMind - but here it means it would need to change all the callers to pass in the default variable, so if you want to change it later it can be a little sad, but that's not what we're doing here. But worrying about those future changes, and adding a field. When removing a field, I don't actually know what intellij would do in that case for changing the signature.",,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
"I'm curious to see, if I put the cursor outside any method definition, and I search for change method signature here - ...in a method or class to be refactored. I can't change the class signature. [1:24:09]",,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
"sure fine. Let's see what this does. I could remove this right here. Method calls, modify or delegate via overloading method. I already have an overloaded method. I don't even know what that would do. I am curious. Sure, it's used in the method body. So there's two problems. One is that it's already defined in the class. Second that it's used in the method body.",,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
I: So that lead you to cancel your refactoring?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How come?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
If I were to - I chose to delegate and I chose to preview here. I could show the conflicts in the view. I know where this is used in the method and I know that is this already defined in the class. If I click continue. What .. I wouldn't have considered clicking continue in that case.,,Invoke (Change Signature),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
I: Why?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It tells me that there are problems, which leads me to believe it is not able to do it.","Invocation
Not Effective (“leads me to believe it is not able to do it. “)",,0,1,0,0,0,"<0,1,0,0,0>",0,239-239,0,0,0,0,0,0,1,0,0,0,
"So like, here, there is the method, with the signature that needs to be changed. And then there is the, uh, unclassified usage, sure, one usage in one file. But let me try it, let's se what the heck happens. Ok, this is an ambiguous call, of course. Why did it have .. Why does it have a forceAccess.. What.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I want to undo this and see what's going on here. Oh weird what. Why is it even. Ok.,,undo,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So it changed the two methods in a way that I didn't expect, it feels bonkers. Right, cause you have a method that has getField with two parameters and one with three parameters. And when I say, I'm fine with the problems, deal with them for me. I still end up with two methods. But the three version is on top and the two version is on bottom.","Invocation
Not Predictable (“it changed the two methods in a way that I didn't expect”)",,1,0,0,0,0,"<1,0,0,0,0>",0,242-242,0,0,0,0,0,1,0,0,0,0,
"I don't need this at all. This being a getField that takes a forceAccess. I don't need to delegate to getField, that's fine.","Invocation
Not Effective (""I don't need this at all.”)",,0,1,0,0,0,"<0,1,0,0,0>",0,243-243,0,0,0,0,0,0,1,0,0,0,
"So this is a relatively simple manual cleanup that I could do. I just need to continue here. And there is another manual cleanup where this getField was taking. Oh wait, did I have three getFields? I ended up with three getFields. So the changing the signature ended up making a third method instead of changing my two, but the scroll position didn't change or give met any indication. Ok, that's delightfully bonkers. So now I have a getField-method.","Invocation
Not Predictable 
 Not Satisfaction (“bonkers”)",,1,0,1,0,0,"<1,0,1,0,0>",0,244-244,0,0,0,0,0,1,0,1,0,0,
"So let's test a getField without forcing access. Note that I did not run this beforehand. Oh, ok. That's .. I see.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[1:29:45] I: What did you just discover?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I hadn't looked at other usages of getField in the codebase. Which is a rookie move. So, now I don't want to start with GetField. I want to start closer to like, leaf nodes.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Leaf nodes of what?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
The calling graph.,,"Restart 
Invoke (Change Signature)",0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Change Signature
"So let me undo some changes here. So if I find out who is actually calling this with my option F7, I find that it is actually there are two variants on it, versus readField and writeField. So let's take a look at readField. Option F7. So it has it's double version and its test. And writing is going to implicitly need reading. So let's go for the writing version. Ah, so I see the testWriteNameField - so let's go to writeField. How many callers do you have? You're good. Are you? You have a string version? Ok. Fine. In your string version, who is calling the string version? Just the non-forceaccess, and the one test. Great, I'm going to start here. And how many versions of writeFfield do we have? Oh goodie. We have an object string object boolean in the signature here. Yeah, let's go and try to remove - Let me actually think how I would do this. In the end I don't want this method to exist. I want all of it's content, except for - yeah. So rather than breaking all of that necessarily, forceasccess is only used here, inside of this method, so I'll just call this false, at least first. Now it says this is never used, which is fine. That's totally fine. I'm going to move this to the right. Let's go here. All these tests. Sure, some warnings, One test failed - the forceAccess-test failed. I think that's fine, I don't think I need the forceAccesTest. Does the forceAccessTest and the not-forceAccessTest test the same things? Before I remove the forceaccesstest. But like, I'm aware that there's, you know, time. Ok - safe delete forceacess? The following problems were found - it's already defined - delete anyway. Cool. You're going to be sad because you already have another definition of this. That's weird - did that change? Undo safe delete. this version throws illegalAccessException, and this does not","Invocation
Not Predictable (“That's weird - did that change?”)","
 Invoke (Safe Delete)
 Undo",1,0,0,0,0,"<1,0,0,0,0>",1,250-250,0,0,0,0,0,1,0,0,0,0,Safe Delete
"[1:35:00] I: Sorry, it's a line change there",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oops, sorry, yep, ok great, then let's do this, and the JavaDoc is already changed, so I feel pretty confident just doing this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
In the testfile,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you expect to happen here now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm curious if the test disappeared. Like the code was compiling, and I wouldn't have expected it to do so.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you expected it to not compile?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oh, I don't know. I wouldn't have wanted it to not compile. There was a 'learn more' option that I didn't choose which might have shown me like here are what's calling it with these particular variables. I forget if, in java, if you have a variable that is unused, whether it still actually compiles - I think it does. Compared to other languages.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now I have lost the actual thing that I was working on. [1:37:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"WriteField. So in this testWRiteField here forceAccess, this is still what did I end up changing then. Right, there were objects, not just - write, there are different variants of writeField, I had forgotten that. This is why, when there are many things, I like to write down each thing so I know what I am doing. So I have forceAccess here. If forceAccess and field is not accessible then set accessible else setAccessibleWorkaround. So I get to decide at this point, do I want to - I'm treating it as if forceAccess is always false, then this is always false. So false and, which simplifies to false, which lets me remove the if-statement. And then I guess I can safely delete this. Here is the already defined in - quick view usages at this time - but that doesn't tell me anything. [1:39:19]","Invocation
Not Predictable (""that doesn't tell me anything.”)",Invoke (Safe Delete),1,0,0,0,0,"<1,0,0,0,0>",1,259-259,0,0,0,0,0,1,0,0,0,0,Safe Delete
"So, delete anyway. Then it will complain, because I have two writeFields, so I'll delete this one. Great. WriteDeclaredField just has the one caller, which is this - that is false so let's do the same thing, how is this used, getDeclared field, mark that as false, this doesn't care [1:40:20]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"keyboard access - delete anyway. Great, that's never used - let's go back to the structure, see what else we have. Reading a declared field, that's before the get, just itself with the false call, perfect, I don't know if in java I can notify my. Yeah, sure. I typed true and I really meant to type false. Sure, rather than needing to visually find it. I already saw that. Delete that anyways. And of course you get weirded out by this. That feels weird, I don't know if I want to do that. I don't think I need to safe delete this, I can just regular delete this.","Invocation
Not Satisfaction (“of course you get weirded out by this. That feels weird, I don't know if I want to do that. “)",,0,0,1,0,0,"<0,0,1,0,0>",0,261-261,0,0,0,0,0,0,0,1,0,0,
I: What would the difference be?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I don't know. My fear is that safe delete would delete anything that calls it. And the - when it says search in comments and strings - when it says search for usages and delete method readDeclaredField. Like - I think it seems ok. But that one trick whenever I do automated code changes - the option there - like I always like to go to the 'show me what you're going to do before you're going to do it. and the 'ok' - like search for usages and delete method? Is that like - ok, what happens if there are usages, you're going to delete the method, but what's going to happen?","Invocation
Not Trust (“My fear is that safe delete would delete anything that calls it.”)
 Not Predictable (“Is that like - ok, what happens if there are usages, you're going to delete the method, but what's going to happen?”)",,1,0,0,1,0,"<1,0,0,1,0>",0,263-263,0,0,0,0,0,1,0,0,1,0,
I: So why do you prefer your manual delete?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I know exactly what is going to happen. And I have a strong test suite, so if that wasn't a great change then the tests would take it. Like, if the tests were also deleted, then I would see that in my source control tool.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: For the sake of time I am going to stop you now.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[1:43:51],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What kind of repetitive code changes did you end up doing in order to solve this task.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I ended up picking a default value for an argument I was going to remove, either visually confirming - visually replacing the argument of that parameter inside that method, or what I ended up at the end, was like, redefining that arguments value, and then inlining it, which should be the same. And then when I am changing the signature, on an overloaded method, ending up with two copies of that method with the exact same signature. And then needing to choose which one of those two to delete, the one that referred to the previously larger one - like the overloaded method is effectively a default value for the larger method. So I would have like .. yeah. Those are the repetitive code changes I made.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you make any other code changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I didn't change anything in the tests as I was going, because I was aware of our time limit?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would have gone about it if you had more time?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would have been running the test suite more often. I would have made sure that each - like I'm not even sure at this point if the tests compile, because I haven't opened them in a few method changes, so I would want to make sure that they compile, and because there were two different test methods for the base action and with forcing access, I would want to make sure that the forcing access method just cares about forcing access, so I would be able to safely remove that test method. If not I might have to copy some of the test expectations into the base method.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Can you describe how you would have performed those repetitive changes including the tests. Like, if you were to incorporate the tests into your workflow now how would that have fit together? At what point would you go and change the tests?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would change the tests after removing the base method, after choosing a default value, and whenever I was changing that the functionality that relied on the non-default value, I would remove those tests. Or, I would remove the expectations and then remove the test methods that didn't have those expectations.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Did you expect any of the changes you made now, to also change the test?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No. When changing method signatures? No. When you say change the tests, let me just say that I wouldn't expect them to take care of my tests for me. I would expect them to change the callers in the tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can we go and check out what changed? If you have any examples of methods that changed.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[1:49:02],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That would be because I have two different readDeclaredFields.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Right. Was this a result of any of your automated changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Because I haven't removed this readDeclaredField yet.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Right. Are there any others.. you changed writeDeclaredField?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah I did. [1:49:29],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"WriteFieldForceAccess, you note that this no longer has..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Right. So if you were to run this now, it would most likely fail.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that what you wanted?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think so? Is that what I wanted? I think so.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This is a JUnit style test instead of a BDD style test, you could more easily show what the variant is. Like, with a boolean forcedaccess equals true and boolean forcedAccess equals false, and then run the same tests, I think. or like .. you could have run the tests here and instead of true, it would have been forcedacces. And I would have been left with this unused local variable, if that was how I organised my tests. And we're getting a more hypothetical than your original question, .. but like, would I have wanted the refactoring tool to also take care of that local variable? Probably not?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why not?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If it's just true, then that's fine. But if it's like, if it's invoking a method you don't know what's going on in that method. So yeah if it's a local variable that is a primitive then yeah, that's probably safe to remove.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So in this case your refactoring did change the behavior of the code?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: But you're ok with that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes. That's explicitly what I'm asking for.,"Reflection
Satisfaction",,0,0,1,0,0,"<0,0,1,0,0>",0,296-296,0,0,1,0,0,0,0,0,0,0,
"I: Right, whereas if it had broken the compiling state, like during the previous task, that's not what you'd want? Or expect? How do those different outcomes compare for you?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah. Like I've been in situations where I would have wanted it to break the code, and I would have wanted to be forced to go and manually check.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You would have wanted yourself to be forced?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Like, do I want it to be false here, do I want it to be false here, for all my callers. But if I want that behavior, then I can just change the signature myself, I don't need a tool for that. I could also like, go and find the usages beforehand. And put together that small list, of like, here are the usages of this, and visually confirm, like, yes I want them to be false in all cases, so then I'm safe changing the signature of the method.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So first going manually through the usages so to speak.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Making sure that removing the option is fine for my callers, potentially, before actually making the changes. Whereas if I want the code to leave me in a broken state, then I'm still doing that checking but after the fact.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What impact your decision to want either thing.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think more than anything, least surprise. but some of it actually is just telling me what is going to happen.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: what do you mean?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"A lot of the dialogue boxes and the warnings are very terse. If they were to explain that this is going to also, like, change the callers of the method.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
[1:54:58],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: During the previous task you temporarily changed the behavior of the code, why was that ok for you?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Because I know how to put it back. I understand like, the execution flow, and when I call the compiler what it's trying to do, like early returns are hard to deal with automatically. They're hard to deal with manually.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So you did change the behavior temporarily and validate your mental model using the tests in order to use the automated tooling, right?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If the automated tool had done the same as you did, would that have been ok?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I don't know if I would know any better. You'll note that I tried to use the tool, knowing that it was early returns, but being like, hey maybe you can handle this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: And so the tool could have actually done the same, like, could have extracted this flag, but it would have been a behavior change and would have broken some of your tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, and like, I think I would be ok with it, knowing that it was not as sound. Like, there might be some structural or behavioral differences here.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: If the tool had allerted you to that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"[1:57:30] Yeah. For example IntelliJs git plugin has a phenomenal ability to resolve differences, like better than git. But sometimes it's guessing using heuristics, like complicated machine learning magic I'm sure, and I know that when I turn to that particular tool it is actually a little less certain, only because the other tool git, didn't do it. So like because turning to the more sophisticated, more heuristic based tool, I know that I might not get the change that I want. Like, when these are merged together it might not be done right, whereas git will only do it if it knows it's right.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So in which cases do you choose to use refactoring tools and when do you choose not to use them?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"[1:59:20] When I know the keyboard shortcuts. Extraction and inlining are awesome because I have easy keyboard shortcuts for extracting a constant versus a field versus a method versus a variable, as far as the IntelliJ’s shortcuts have no mnemonics going for them, these are some of the few where it has so it's easily to reach for them. That aside, the refactoring tool isn't that far off. Some of it is knowing what the refactoring is going to do. Like, when it says push IDT in, I don't what that is. and like, I've spent five years as a consultant teaching people how to program better, so I'm used to knowing this particular tool well, and introducing people to like refactorings and the notion that a refactoring is a small change of layout without a change of behavior and if you say that you're spending three weeks refactoring the codebase you're probably rewriting the codebase, and you're using the word refactoring. So, When would I look at an automated tool versus doing it myself, is familiarity with the tool, I know what it's going to do, I know the situations in which I am going to use it well?","Reflection
Efficient 
 (“Extraction and inlining are awesome because I have easy keyboard shortcuts”)
 Predictable 
 (“knowing what the refactoring is going to do.”)",,1,0,0,0,1,"<1,0,0,0,1>",0,319-319,1,0,0,0,1,0,0,0,0,0,
"I: Can you say something about the difference for you between trust, correctness and predictability when it comes to using the tool.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Sure. Refactoring tools where I can undo the change is fine. That's very low cost to actually try. Very occasionally I'll do a refactoring that doesn't have an undo option and that is frustrating. I am comfortable using a tool that isn't necessarily 100% correct when it tells me. There are all sorts of nice clever automated code changes that I'll use that aren't safe. In rubymind for example, and in intellij, you can swap arguments. So if you have a method with two arguments, and you have them in the other order, but rubymind doesn't go and change callers when you do that.","Reflection
Not Satisfaction (""I'll do a refactoring that doesn't have an undo option and that is frustrating”)
 Predictable (“I am comfortable using a tool that isn't necessarily 100% correct when it tells me.”)",,1,0,1,0,0,"<1,0,1,0,0>",0,321-321,1,0,0,0,0,0,0,1,0,0,
I: So its just a local textual change?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes. And that's great, I know that it works like that. I don't think in that case it worries me, but I would expect that if I do that like if I do that here, like flip comma, I would expect that to change that across the code base, because it's IntelliJ and it has signature types.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: In this example, if this was called with methods, if the callers used method calls to preduce the arguments, then it might change behavior, what you just did.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yeah.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that something you would expect the IDE to alert you about?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, I would want that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"For time, I'll end this. Final Qs? [2:04:05]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, for the multiple return was there a better way to do that.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,