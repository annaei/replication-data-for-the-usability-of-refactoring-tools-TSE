This is just kind of like a datastructures library. Utils.. oh that's long.,,,Predictable (3),Effective (2),Satisfaction (2),Trust (2),Efficient (2),Vector: ,Invoke (3),Row Range, Predictable (2), Effective (1), Satisfaction (0), Trust (1), Efficient (0),Not Predictable (1),Not Effective (1),Not Satisfaction (2),Not Trust (1),Not Efficient (2),Refactorings
I: Yeah. General utils.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I am trying to get a sense of what utils you are presenting. This is deprecated, and this.. some of these aren't even used, I'm curious why. I'm curious if the tests pass. [02:47]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
T1,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The approach I am going to take, is go into the string utils class, try to highlight all these methods - I hope they are in sequence so I can highlight them in a sequence - and I think intelliJ has a functionality for extracting things into a new class, so I'll probably use that. And I will repeat the process with stringUtilsTrimEmptyTest. And since they only test empty and blank I am going to name the class stringUtilsTestEmptyAndBlank java. [04:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
It's right there..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Good, this is great, they are all in order. And it looks like they are not using anything from the test class itself. So I can probably just highlight and refactor, all the way from test is anyEmpty to testIsAllBlank. Ok, let's see if I remember how to do this. Refactor, Move ..",,Invoke (Move),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Move
"Yeah. Oh, ok This is going to be interesting.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I thought move is going to give me the option to move it to a new class. That doesn't look like an option I can see.,"Invocation
Not Effective (“That doesn't look like an option I can see.“)",,0,1,0,0,0,"<0,1,0,0,0>",0,9-9,0,0,0,0,0,0,1,0,0,0,
Let's see if i can extract a superclass. [05:21],,Invoke (Extract Superclass),0,0,0,0,0,,1,,0,0,0,0,0,0,0,0,0,0,Extract Superclass
"Ah, and it looks like I can. I am not sure that is what I want to do, but let's try it anyway, because this won't be that expensive to undo. I am going to call this StringUtilsEmptyBlankTest. Here, great. Refactor. Yes. [05:51]","Invocation
Effective (“it looks like I can”)
",,0,1,0,0,0,"<0,1,0,0,0>",0,11-11,0,1,0,0,0,0,0,0,0,0,
"Great, it is not giving me anything. Ok, so I have created the class, so maybe this is going to help. Now maybe I can use move. Move ...","Invocation
Not Satisfaction (“it is not giving me anything”)",Invoke (Move),0,0,1,0,0,"<0,0,1,0,0>",1,12-12,0,0,0,0,0,0,0,1,0,0,Move
"You know what, there's a reason copy and paste exists so I'll just do that. [06:23]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you decided to not use the tools?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, because I can't find them.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And I probably need to do some additional setup here. [06:36],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Well, StringUtils is static.. so I guess that is .. not bad.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Alright, now what I am going to do is to rerun all the tests to make sure I haven't broken anything, because I am paranoid. [06:57]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's see what happens.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Great, so I haven't broken anything, according to these tests. That is fine. I have moved one test, so I will move over to the other. [07:56]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So the same thing here. [08:08],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess I am not even going to bother trying to find the tool now, I will just do it manually.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why did you decide to not try? [08:21],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Because I couldn't find it the first time, so I wasn't motivated to try. And I know that this will work, instead of me fumbling around. [08:30]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Here we go. Oh, ok, this will be a problem, it can not find foo so we have to go back. What is foo. Ah, it is a private static final string foo. That is used here. [08:49]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So, I wanna see where else this is being used. It is only used in the trimEmptyTest. What I'm thinking is I could make this public, so I can access it from the stringutilsemptyblank test, or I could create a copy of it in the stringUtilsEmptyBlank test, which is, I guess, ok? It is just a test string, they don't need to be the same across classes. Or, this is overkill I guess, but I could create like a top-level class which holds this, and have both of these extend it. But for the purposes of this, I don't think this is really necessary, and I don't think it is what the system is doing, because these tests aren't really extending anything, so I am just going to go with creating a copy. [10:00] And that should fix the problem with foo. So, the same thing here, I am going to run all my tests. [10:18]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Great! So that - I think that is good. The tasks ask me to make a test class that only tests empty and blank, and I think I have done that. [10:54]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The first thing I did was to look at the classes from which we wanted to extract the classes. And then - I kind of had a model of how I wanted to do this. [11:07] I know that IntelliJ has extract method which, first I need to highlight the block of code I want to refactor, because this is kind of like extract method, in that you are extracting a block of logic from an entity, except this time it is at the class level. So I basically found the test class that we wanted to extract it out of, then I found the test methods, made sure they were in sequential order, so I could just easily drag my cursor, and then I refactored them out into a class called stringUtilsEmptyBlankTest. After failing to find the automated tool that would help me solve that problem.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: at what point did you make the class? [11:59],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I made the class when I tried to use the tool for the first time, when I said I want to push these members into a class. The class was autogenerated. From there I went back to the test file where I had the methods I wanted to extract highlighted, and then I just cut and pasted them.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: You mentioned that the methods were in order, what if they had been spread across the file, would that have impacted your workflow?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, for sure. That would have forced me to move back and forth across the files. [12:34]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Let's say we had method I want, method I want, method I don't want, method I want, then I could take the two methods I want, paste them in, and go back to the file highlight, and then paste that in. But I think I could have solved that problem if I knew off top of my head how to use IntelliJ's multicursor highlighting. That would have been useful.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: And also cut-and-paste?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, because I cannot be bothered to find that tool.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What made you decide to stop trying ?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The fact that I knew for sure that I could definitely just do the cut and paste as fast or faster than the time I would have spent searching through all the submenus, locating the tool, it would be faster to cut and paste.","Reflection
Not Efficient",,0,0,0,0,1,"<0,0,0,0,1>",0,38-38,0,0,0,0,0,0,0,0,0,1,
"I: And you said you had a model for how you wanted to do it, can you elaborate on that?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"How I approach this kind of refactoring, when I basically take logic, rip it out and put it somewhere else, is locate the logic, highlight it, first right-click or whatever, on the IDE to see if there is an option for me to extract or rename or whatever, and then go from there. If the submenu presents the option I am looking for, in this case move or extract, in that case I would click on that button and see what other options pop up, if not I already have it highlighted so I could easily cut and paste it into a class I created. [14:09]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any of the changes you made you are unsure if you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The static constant foo. I'm not sure if that was the best design going forward. The first change I made was independent of the class it self, because it did not use any of the class' members, but the second change in stringUtils, it turned out that it did use like a class member in its test, so I have to make a design decision if I want to make a superclass just to hold that, which I thought wasn't worth the tradeoff. [14:51]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Do you know of any other tools that could have helped you, except the ones we already discussed?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
No I don't think so.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Task 2 [15:13],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So my general approach is to navigate to StringUtils, open up the test suite next to it, and run the entire test suite first, remove the methods and run the tst suite again. [16:06]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm really paranoid so I'll just run the tests again. [16:32],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So nothing is broken yet - I'm sure it will get broken because that is what refactoring is.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So we are in StringUtils, notBlank",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Is this overloaded? No - I want to make sure that we are deleting the right version of it. This is what I want to use - the structure. And it's a big boy so we have to wait.. isAnyNotBlank. It looks like it's not overloaded, so I can just delete it and be sure it's the right one. So I'll just highlight this block here.. [18:01] Ooops, did I delete the right one? Let's take a look. [18:10] Ahh.. so now I can't use this. That is going to be a problem. Now I can't .. this is not going to run ok. [18:26]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Where is this used? Oh Boy! Oh.. it looks like it's only used in the test. Am I allowed to delete this method? Because I don't think it can run any more without the original one. [18:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
throw an exception unimplemented.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Well, just as a reminder to come back here",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: are you expecting this to be part of the solution or is it, a note to yourself so to speak?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It is a note to come back here. We're not going to remove this method, as specified in the task, so I'm going to have to come up with some method to fix this. [19:55]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm going to make all the isBlankTests fail, so I can come back to them and see that I have to fix this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes I know that is unhandeled. There we go - or not there we go..this is going to be horrible. Let's see if we can run our tests. [21:02],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That is good because now we are going to remove all these tests, because we removed isNotBlank so we should remove all the tests associated with it. [21:30]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What happened now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I removed the method isANyNotBlank and I ran the tests to see if something broke, and we can see that something broke, the tests associated with the method we deleted is complaining that the method do not exist, which is to be expected, so now I am going to delete these because we don't need these any more. And now - oh this is going to be an issue. Because it says unhandled exception. What I will do for now... is I will comment this out to see if anything else fails in our testing suite. [22:18]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll make a note here for myself TODO back an fix these.. [22:26],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Great! So the tests in this suite pass, so I will run all the other ones.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why did you do the comment now before running the tests?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If I didn't comment this out I would have a compile error saying I didn't handle the exception. And that is kind of fine - that is the point of the exception, to remind me that I need to come back and fix this. But for the purposes of testing whether anything else in the system fails I can't have this yelling at me so I commented it out. Now what I am going to do is bascially uncomment these out, and go back to fixing this. [23:24]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Looks like this will return true if all the char sequences are empty or null or ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
isanynotblank ... that is annoying..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I am trying to figure out which other methods I can use to fix this error. [24:05] So bascially we need to replace the the functionality of this method, so I think is is a good idea. Then I can go and see .. char sequence..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I will use the method isBlank.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So basically what I need to do is loop over this.. [26:34],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
reimplementing method.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So what I'm doing here is, that consumes a char squence, and this is an array of char sequences.. [28:28]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now let's run the tests again. [28:53],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, so two passed and two failed. I think what we are missing are null checks. [29:24]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So now you are reading the failing test?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I will use it to guide my implementation. It is probably not the nicest code.. I feel bad writing this code. [30:05]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This is fun, this reminds me of work.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"All the tests pass and I'm pretty happy about that. Now we've done that, so now I will look at anynotempty. I will be a little more careful this time and see where it is used, but I will still go through the same process where I delete it first and then look at the tests. [31:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Spelling error.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I am going to remove this. So where is this used? Once in here. I'll write - I'll still throw an exception. [31:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you elaborate on that choice?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I use an exception because it is designed to really go wrong, to say you have to look at this. If I return for example false here, it can make some tests pass unintentionally, whereas with an exception you are guaranteed that they will crap out. [32:14]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's that. Back to isNotEmpty. Here we go. Now I am going to delete this. Oops, I deleted something else too. Nope? No, just seeing things. I think? [32:42]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Now you checked the git diff?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I thought I saw something else get deleted but by checking the diff I verified that only what I wanted to delete was deleted. [32:55]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It is a relief. Now this is red - of course - actually it is not it's lying, because I know from here we're good to go.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Going back to the tests - to stringutils - I'm not going to bother going through the tests, I'll just run all of them and see what fails. That will be easier than me checking for the specific tests that has compile errors. I'll let the compiler do the work. [33:35]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Great, awesome. Now I am going to delete these. It's good. And what else is there. And here. Ah - I'm not going to delete these - that was an exception! THat was close. [34:09]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now I am going to follow the same process I had before.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What are you doing now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I am kind of refactoring the behavior of isAllEmpty. The same thing we did before. And I think I can use kind of the same structure as isAllBlank - I think I will just copy and paste the method of this body, because they are kind of similar.. isAllEmpty. [35:01]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This returns a boolean, and also - in this case it is going to be false, ok. [35:17]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Here I am going to run my tests to see what is failing - I don't want to go ahead and implement it. Obviously it is going to be failing tests..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You do not expect it to work?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, I do not - and it doesn't - which is good! [35:58]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I feel relatively ok, but now I am looking at this and I feel sad inside. Two failed. That is ok. [37:12]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So if it is ... all empty.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'll run these again. [37:52],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Looks green. Great, I think we're ok. I have complete confidence in this test suite.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Test suites do not necessarily tell you the whole story. I'll just check. isanynotblank..isanynotempty. I think I am done. [38:54],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I navigated to string utils, did crl+f for the methods, and then I opened the structure view to see if it is overloaded or not. If it is overloaded, right, I have a big problem. Then I don't know what to do. Luckily they were not overloaded, and deleting this method was the only one to delete. So I did that. Then I found out that it was being used by other methods in the same class, so that gave me a problem, so I wanted make sure that I did not break anything else by changing the code, so I made the method I deleted throw an exception instead of returning a dummy value like false - because that will actually still make something pass, like I said. But an exception will just crap the whole thing. Then what I did was, only the tests that was related to the method I was deleting was failing, which means that I have successfully deleted the method I want to delete. And now I refactor the method that use the method I deleted to use other methods. [40:10]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And then when problems arose like the tests still failing after my refactoring, I let the errors kind of guide me to what I needed to do.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tools that automate any of the steps you needed to make?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't know of any tools that automate the refactoring I needed to do. I think this was largely a manual process. [40:41],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What was the refactoring you needed to do?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Basically delete method and replace the functionality of the deleted method with another method in the same class. I don't think IntelliJ is intelligent enough to tell me which methods could do that. [41:00],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any other tools that could help you?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, I don't think so.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is there any of the changes you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I am always unsure of any changes, but I think I was pretty careful with the tests that I ran to make sure that I kept the same functionality. [41:28]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I don't know if I introduced any bugs or not, but I did keep the same functionality as before. That is what the tests were telling me. [41:35]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What would you usually have done to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think this is representative of how I usually go about solving these tasks. I run the tests like a scared animal.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I will probably look at the method, look at the test, run the test to see exactly what this is doing and try to go from there. What I will also probably do is, every place the force access flag is used in the method, I will set the value of hte flag to be false, as an initial pass, and then after running the tests I will remove the boolean flag alltogether and the switches on that flag.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Task 3,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Close everything else. [43:33],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"There are multiple methods I am going to have to change - oh that's annoying. ForceAccess, where is this used. I will just mark these.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm not that much of a matcho programmer so I'll probably do one method at a time. So that is one I have to do, here is another. Oh, there are a lot. So I am probably going to copy and paste all of these. [44:47]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So I have seven places where I need to remove these.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's start with a simple one.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Actually this is a horrible way to go about this. What I should do is look at where forceAccess is just used and not passed through as an argument, 'cause that is going to screw me up. [46:30]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Unfortunately, this looks like the only place it is just used and not passed around. So what I am going to do here is find the place that forceAccess is actually used as a boolan parameter [value] is opposed to methods that just pass it down through a call. If it do it up top it is probably not a great idea.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: On the top of what? [46:52],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
On the top of a call where it is being passed down. I want to find where it is just used and not being passed around. [47:03],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you elaborate on why that is?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"My visualisation of how that is going to be is, if I change it in a method where it is being passed down, it is going to lead to a lot of cascading effects, that are going to have to change other methods as I just try to remove the forceAccess, whereas if I do it just here, I am going to only focus on this method and worry about everything else, like up top, later. [47:42]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Let's take a look. getDeclaredField is used in a lot of tests. And most of it is true. But we want all of it to be false so I don't think these tests are even valid any more ... true true true... so all of these are probably going to fail now. Oh, that is going to throw an exception because.. great. Now I can run these tests. Great, they are all passing. So let's take a look at fieldUtils - and if it is true, we set accessible, and if false, we just return null. [48:57]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And see what happens to these tests.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Do you expect this to be part of the solution, what you just did?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Setting everything to false? I don't expect that to be part of the final solution, but I am trying to make all my changes as atomically as possible. I don't want to delete entire fragments of code at a time, and I am trying to get it as close to the final solution as possible without making a ton of changes. I kind of want to see what happens in my test. So it has a nullpointer exception here, which is annoying. So go here, if it is false, let's set that to.. so now, let's remove this, which is definitely going to cause changes in other methods. [50:14]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And this is getting false. That basically makes me change redeclared field, just like that. Oops, what is this saying.. oh crap this is going to be annoying. Ambiguous methods called, in fieldutils - now I am going to have to look at this more carefully. I think there may be an overloaded method. So what I am going to do is basically, I am going to look at the structure again to see where exacly things are going wrong.. 'cause we are seeing that these two have exactly the same way, and one is overloaded with the boolean flag. [51:14]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, getDeclaredField. Oh. Ok.. I'm trying to think what is going on here. So that is always passed on as false.. so if I make the change here, do we even need this wrapper method. I don't think we do, because getDeclaredField will return a field by definition. I don't think we no longer need this method, so I am going to delete this as well. [52:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And now the tests are going to complain of course. getDeclaredField, forceaccess. And we don't want ot forceaccess any more - so do we even need these tests? No, because they are no longer part of our solution. [52:33]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now we expect this to throw an exception - but why - does this [52:47] throw an exception? That is fine. So where is this thrown.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So what I am trying to do here is figure out where this exception [52:59] and kind of go from there. These names are really annoying. [53:20],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I hope we can delete these. I am going to delete these.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This was a little trickier than I thought. Ok. So forceaccess is no longer something here. And are there any other compile errors? I bet there are, because that thing is used everywhere. [54:16]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes it is. Hmm.. horrifying. This is probably one of the worst ways to refactor. I am just changing a bunch of things without running my tests. But right now, this is not going to even compile otherwise. [54:44]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So now I am literally just going to run all my tests and pray they pass. [54:54],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Ooh. I don't know if it is the right kind of pass we want thought. [55:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What do you mean?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I mean, I deleted a lot of tests, and I think I deleted them for a good reason, because it says that all code should perform as if it is false, and they were testing whether it was true, and now we are not going to hit that true condition any more, so I don't think those tests were valid any more. [55:24]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"But that always kind of scares me when I delete a lot of tests. I know that the number of tests doesn't correlate with how strong your test suite is, but I am kind of hesitant to delete all these tests, because I have been taught that testing is good. [55:44]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: To clarify, you decided which ones to choose based on that they were calling it with true?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes. And now we can delete this entire thing [56:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Because if false .. it is always false .. so the true branch is never executed so we don't need the true branch at all. Now run all the tests.. we will run the field utils test at least I bet yah if I run the entire suite some will crash. [56:35],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now let's look at forceaccess, and remove all instance of it. Now it is an and, so it is always going to be false. So we are not going to setAccessible ever, right, because if that is false the end will never be true, therefore remove that. There we go. And this... aah, it is already defined. [57:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That is ok. Let's go back and see which one is overloaded.,,undo,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"writeField... oh this is just another case of where it is a wrapper, so I'll just remove it, just like that. [57:30]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
where was I .. forceAccess.. [57:48],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
readField - this will always be false - will this always be false - yes - I can even just delete this - is this overloaded? [58:13],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, it's just passing it down so it is fine. Done. [58:42]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I am kind of horrified at all the tests we are going to screw up. Object field, object field.. which one is this using.. ok, there is like three of these [59:01]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
And then that will fix it. Yep. And forceaccess is used here. Get field. I am just going to run my tests again while I can - ah I can't because there is a red thing there. [59:18],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's cool, thanks intelliJ. Hopefully now I can run my tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So it seems like you try to get back to the stage where you can run the tests and then doing that every time it is possible, is that correct? [59:39]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now it looks like I have a lot of things to fix here. [59:50],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now these do not even take parameters.. test.. value one. Ok, that's fine. [1:00:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
But this. ...[1:00:08],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Field object publicchild .. [1:00:13],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Hold up. I might have gone off the rails here, this is horrible. [1:00:29]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now I think what I've done is - I've been defeated by overloading. That is so annoying. [1:00:45],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you elaborate on what you are discovering now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think what I've done is I've deleted methods that - this entire WriteField is overloaded. And I think I've deleted the one that this is telling me to call, but now I am confused as to which overloaded one I should be calling. [1:01:10] What I am going to do is trying to be systematic about this and go to all the writeFields, and see what exactly is going on. [1:01:25]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Same description for everything, that is awesome. That looks promising, because it is kind of passing everything.. it is kind of like a wrapper. Do we need this? What does this one do? [1:01:54]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So what if we just .. remove this [1:02:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Then what happens here? Then this entire thing has multiple implementations still. [1:02:09],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Each of which takes four paramteres, and this is only taking three. So this is probably testing the method that I just deleted, because this takes three... [1:02:26] no it still takes four parameters.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, writeField... what exactly did I change? I am going to have to go out here. [1:02:41]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you elaborate on the decision to move over to git diff,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, I want to see what I deleted. [1:02:49]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why did you chose to go there just now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It is usually part of my workflow - like I know there is an IDE version, but I am a little more familiar with the command line - but I guess I will switch back to the IDE if this is confusing. [1:03:12]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think the file we are working on is FieldUtils.java,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So let's take a look. [1:03:22],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I deleted getDeclaredField, that was fine.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"And then I want to look at .. readField, that is fine. WriteField, that is .. writeField is what we want to look at. So that I did not change. This I changed, I deleted it completely. Yeah, I remember that. [1:03:49]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So that wasn't very helpful, beccause I want kind of looking for what version of writeField.. hold up, where did the failing test go? [1:04:20]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Here we go. What I am trying to look at is which version of writeField actually takes three methods.. 'cause that takes one two never mind I found it, it's right here. [1:04:39]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So I have deleted the method here that takes three fields, because it is just a wrapper function. That means I need to directly call writeField here. So is it possible for me to go and just try something.. [1:05:02]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That makes things pass, but what version am I using. [1:05:16]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'll just delete this one, that is always going to be false, so it is the same thing I'm doing here. And now I don't need to make all these changes hopefully. Oh, looks like things are going a bit better than before. This .. is the same four parameter version. I don't know why that is complaining.. oh..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So I am using ctrl + shift + p to get the type of the parameter, which - according to writeField it should be a field, but it looks like it's not . Oh, never mind, this is good, because again, it is going to perform as if the field is false, so I am just going to delete these. [1:06:49]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"TestWriteNameFieldForcAcc.. yeah, we're not going to foceAccess any more. No more red, and I hope these test still pass. [1:07:07]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It's good, but I'm still slightly concerned about all the tests I am deleting without making absolutely sure that we don't need them. [1:07:26]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Let's keep going. Now can we delete this? [1:07:36],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
ForceAccess is false - what happens if we delete this now. WriteField is going to complain - right. [1:08:05],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now this means I have to remove that method and then remove this and it will take care of the overloading problem. That will always be false, so I will just make it false for now. Why is this complaining - because down here - now it is going to be false. [1:08:37] that's fine.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Go back to my test, see where it complains.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It's right here, writeField, truetruetrue..",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"We still need tests where we test writeField... that's not going to .. I think these tests are going to fail even though they are compiling, because they test when it is true, and it shouldn't.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now I wonder if all these tests are going to fail, and that would be good. We don't want forceaccess, which is in their name, so since we don't want that any more, they should fail.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"One failed, ok. What happens if I just delete. [1:09:59]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I think that is one unit. [1:10:10],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"great, ok, so I assume these are all going to fail, and that is hopefully good.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If that fails then we are good. 'cause we should not be able to set this field at all. Hmm, that's not good. If we're running this field, [1:11:14]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Huh, what happened before.. [1:11:28]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I'm trying to go to where I had my .. that one [1:11:43],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, let's debug. [1:11:56]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I don't think that should be happening. We shouldn't be allowed to change..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why did you choose to make this change to the body now?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I knew I was going to change it eventually anyway, so I can just eliminate this dead code. [1:13:47]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That kind of concerns me - are we able to write this. THe field is little s. Then we write this field .. let's come back to this. Todo, come back and verify. [1:14:17]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Forceaccess no longer exist. [1:14:31],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Why did you decide to move on and work other places?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think that will require more thought than refactoring, so I will come back to it later. [1:14:53]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
forceaccess isn't even being used [1:15:09],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now this will complain.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you expected that error?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, I did. I expected to be used several places, so a better idea would be to go to",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Oh my god, this pattern.. I bet you there is a tool for this.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"It is exactly the same pattern as before. There are two methods that has the same name, and the one that is called the most with two or three parameters, delegates it, passes that message to the other method that is overloaded with a forceaccess field that is false.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So it is basically a wrapper that makes sure that every message we pass to this is going to be false. [1:16:38],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"This is really annoying. It was ok the first time, and now since this is a repeated pattern I'm seeing, it's kind of .. making me wonder, that there probably is a tool for this, or there should be a tool for this, but I'm not going to find it right now. [1:17:11]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So this is the point where you thought of a tool?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yeah, this is where I thought holy crap there needs to be a tool for this. [1:17:21]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Or, for this specific thing.. it's just incredibly frustrating to have to remove the wrapper and remove the parameter.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
So that is not being used so I can just delete that [1:17:38],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That's fine, because here, we just delete this, and that's ok .",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now this is complaining, that's fine. [1:17:57]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Looks like I got most of it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now I am concerned, did I break everything else. I should have run not just the single fieldUtils test, from the start, that was my mistake. [1:18:24]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"One test failed, that's better than the whole suite.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What did I have here before?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now I am looking for where the exception is being thrown. [1:19:32],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Looks like nowhere any more.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That throws it.. but where is this thrown. So writeDeclaredField should throw an illegalAccessException. Ok this is concerning. WriteField.. goes here. It is thrown here. [1:20:40],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The error is we are expecting an illegalAccessException being thrown here, and it's not being thrown, so I'm wondering what I changed to make it not be thrown. [1:21:34]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I am trying to narrow down where it is being thrown, and figure out why it is not being thrown. I'm trying to look at where i used that forceAccess flag.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
What happens if this is false? [1:23:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now three tests fail, it is even worse. Well, these are all fail now. I'm going to delete these, because again, these are testing the case we are never going to run into any more. Rerun. [1:24:28]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Ok, we still have the exception.. so it looks like we're still setting the field, which is concerning because I deleted everything where we used the forceaccess parameter to set the field. I am probably going to be stuck at this bug for the next part of the study. [1:25:35]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I want to see what I changed here. [1:25:43],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, that can't be it. That fixed the problem where the exception was not being thrown. [1:26:33]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Forceaccess true, these are all invalid tests.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I am still going to have to delete a lot more of that [1:27:01],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Something that kind of make me happy, is that the illegalAccessException are still being thrown even after I refactored some things, which means that at least some parts of this behavior is being fullfilled. [1:27:18]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"That kind of gives me some feedback on whether what I am doing is correct, which is always good.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Now we are pretty close to removing all these forcecaccesses.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Where is writedecalaredfield, great there. [1:27:52]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: now you didn't even look at the error right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, I knew that it was the same error. It's the same three errors.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Any other instances? Yes, there. TODO remove dead code",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
before I do this I want to run all my tests.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now I am going to eliminate the dead code I had here. I am not going to make the same mistake I did there. That is just going to be continue, and that is removed. And getField.. I bet..yeah, it is just a call to that, so the same error is going to pop up. [1:29:30]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"So again, I'm just going to delete this: it is a wrapper, we're always passing in false, and it is false by default now anyway. [1:29:41]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I see red. Right here. No need to specify false now 'case it false by default. Oh and I bet.. mhm, don't need that any more. [1:30:13]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"M, concerning. Ok, so hat happens if.. I",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'll just comment these out. Actually why am I even commenting it out, I probably do not need them any more. [1:31:14]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Nice. That is a new error I haven't seen. [1:31:42],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I'm probably trying to run a test that has been deleted, so let's go to all and run. [1:32:11]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Hm, now I want to investigate, if we can find any more usages [1:32:35]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I think I am done. All the tests pass, I removed anything related to forceaccess, everything acts as if a false forceaccess has been passed in, so I think I am done with this task. [1:32:57]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What did you do in order to solve this task?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Go to the file, cmd + f for forceaccess, and there was a lot going on and I didn't want to forget about any of them, so I wrote a todo for each forceacces. [1:33:18]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Then I started trying to remove the one that basically at the bottom of the call hierarchy, because I knew it would just be passed through to everything else. Then I went to where errors were occurring, and I ran my tests continuously. Then I found that stupid error, like, you have a wrapper call, to basically - to call a function with a default of false every time. I think that is a language feature: Java does not have default arguments, that's why that was happening. So I had to go in and fix all of that. [1:34:04]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"The first time I had to think about - I just need to delete that and that is it. The third or fourth time I realised it was a pattern, so I don't even need to read the error, even though I should, so I just went and deleted it. [1:34:21]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Can you talk about how you organised your changes across different files and across the code? [1:34:31],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I basically went bottom up, as in, I looked for the simplest use of forceaccess where it was just a boolean switch and not being passed through to other methods. [1:34:47]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I fixed that, and I ran the tests, and when I discovered issues I found that these are testing the cases where we want to forceaccess, set to true, and we don't want them any more, so I deleted them. [1:35:09]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: so when you encountered issues, did you prioritise resolving them?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"When I knew that I could fix them quickly. If I had some idea about what was going wrong, but like - I did the first time I got over the bug, I said I'll come back to this because something weird is going on, and that's when I realised that setAccessible were set to true when it shouldn't be. I prioritse bug fixes when I have a direction I want to go, if not I'll probably move on to the other code, because it might help me understand what is going wrong here. [1:35:52]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any tools that could have automated any of the things you did?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I think there is something called change signature.. yep, I could have used change signature. But honestly I don't know how helpful it would have been, because I did not use it that much - and just me highlighting and deleting it was, I think kind of the same approach. [1:36:27]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you were to do this task over again, how would you go about it?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Now that you reminded me that there was a tool I'd probably try the tool first, and if I see that there is an advantage of it I'll keep using it, otherwise I probably would follow the same approach. [1:36:47]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What would you expect the tool to do here?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I would expect a tool to refactor - so it takes away or adds a field, and then maybe pop up a field saying you call the method with the original method with an unchanged signature in these places. And then if I click yes, I would imagine that there is a list of usages poping up, that I could step through and delete or remove. [1:37:16]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That is kind of .. I think I've seen that. That is the workflow that intelliJ encourages you to do.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Have you used that refactoring before?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Nope.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Have you used any of the other ones?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I've used rename, extract method and push up members to a superclass, but not too extensively. And I've used - IDK if it is a refactoring tool - but structure view.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How come you have used those?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"They are relatively simple ones. An I know what the code will look like. A really big part of it, is I can pretty much visualize what the code is going to look like after applying those tools. I know the changes are going to be relatively local, whereas for change signature, I have no idea how the code is going to look, and doing this all in an automated way scares me a little. If I do this, am I easily going to go command z if I make a mistake. I guess in these complex cases I put more trust in myself than in the tool. [1:38:38]","Reflection
Predictable(“An I know what the code will look like.”)
Not Predictable (“ for change signature, I have no idea how the code is going to look”)
Not Trust (“in these complex cases I put more trust in myself than in the tool”)",,1,0,0,1,0,"<1,0,0,1,0>",0,277-277,0,0,0,0,0,1,0,0,1,0,
I: Can you summarise what you just said?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
For simple refactorings I know exactly what the changed code is going to look like. For complex refactorings that cut across a lot of files it is difficult to predict what the source code looks like after transformation. And that impacts my trust in the tools. [1:39:02],"Reflection
Predictable 
 Trust",,1,0,0,1,0,"<1,0,0,1,0>",0,279-279,1,0,0,1,0,0,0,0,0,0,
I: What makes you trust the tool more?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
When the steps are simpler and I actually know what the code is going to look like immediately after I apply the transformation. If I don't know what it will look like it is the equivalent of closing my eyes and telling the tool to do it. [1:39:25],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Do you use, for example, preview views?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, but I haven't used them extensively enough to be completely confident with them. [1:39:39]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is the any of the changes you made on the third task you are unsure you got right?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes. Especially deleting the test cases. I am pretty sure we don't need to test for that any more, but it would have been nicer if there was another piece of evidence that pointed me in the direction that deleting the tests is the right thing to do",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: What would that be for example?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Perhaps - well I would have to write this test - a test that threw an exception if I tried to pass in true, or tried to emulate passing in true, so it failed before I did the refactoring and passed after.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: I'd like to go back to the second task. Your workflow was finding the code you were going to delete, delete it, remove the call to it, and then work from the tests to reimplement it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know of any automated tools you could have used there?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes. I think I manually deleted the method, but I'm pretty sure there was an automated delete all usages.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you know the inline method refactoring? [1:41:31],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, I do not.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So Inline ..,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Is it the opposite of extract?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Yes, exactly. Would you have considered using that? [1:41:44]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, that would have been a pretty solid choice. No, that is exactly right. Because I basically copied and pasted the body of a method.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: You also reimplemented it.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
For my second implementation I would probably inline it and make changes as necessary. [1:42:16],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Inline the one you wrote?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Did you consider inlining the bodies of the methods you deleted?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"No, but I should have. Yes, that is good. [1:42:33]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: In both the second and third task you did not look for tools at all. Why not?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I thought this was a relatively complicated refactoring so I thought that instead of me digging through the menus for refactorings and undo them if they don't work, it would be easier for me to just go and do it myself.","Reflection
Not Efficient",,0,0,0,0,1,"<0,0,0,0,1>",0,305-305,0,0,0,0,0,0,0,0,0,1,
"For me, as manual as the process is, I know that I can just undo it. I don't know if that is going to be easily possible with a refactoring tools, like maybe, but I cannot be 100% sure.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: So you don't trust that you are easily able to undo a refactoring?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"If they are automated, yes. [1:43:35]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: how would you usually have gone about the third task if you encountered it in your regular life?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Pretty much the same way. Run the tests all the time, refactor test, refactor test.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you have organised the order of your code changes?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Same as here: look for the simplest use, delete that, and go to where it errors up.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Then branch into those errors?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Excatly.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: If you refactor either manually or using tools, how do you ensure that it is correct?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Tests. I always run tests before, if I can during, and after. [1:44:49]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: What about the errors the tests don't pick up on, like, forgetting to remove commented out code.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I guess, there is no real process I follow to check for those. Generally what I refactor, make sure the tests are green, and then go back and see if I miss anything. Just doing a pass. But it's not really a foolproof way. [1:45:25]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: How would you notice if you miss something like that?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Code reviews. Linting tools. If something starts going wrong. [1:45:47],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Just some general questions. What impacts how much you trust the refactoring tool?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"One thing is how much I have used them in the past, another is if I can predict what the code is going to look like, clearly in my head, then I trust it more. If the tool follows what it is in my mind.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Do you have any examples of when that did happen or did not happen? [1:46:37],,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Extract method is a good example, since I an just highlight a block of code, give it a name, and it is just going to pop here. But there are other weird ones, like if it has a loop in its body and I try to use extract method on that, and it kind of - either it does not work, or it gives me something, but the loop is not right.","Reflection
Predictable 

 Not Satisfaction",,1,0,1,0,0,"<1,0,1,0,0>",0,324-324,1,0,0,0,0,0,0,1,0,0,
I: It breaks the test?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes. I don't know how but that has happened before.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: Has there been any examples where you used a refactoring tool, it resulted in compile errors and you were ok with it?",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Generally when i use a refactoring tool it does not result in compile errors. So no. But if it did I'd be like, why did I do that, I could've just done it myself. Here is another example, a case of when I want to do a refactoring manually, is that I can refactor it such that the code is going to compile in every step, so I can comment out code, write a stub, and then refactor the code. Whereas, some refactoring tools just break the code and rip it out. [1:48:11]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Like, refactoring tools may make code unable to compile. Whereas if I do it manually I can write a stub and break it out manually. [1:48:25]",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
That is another case where I would prefer to do it myself.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is that example from Extract Method?,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Rarely, but yes, sometimes.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"I: So you might want to tweak it manually so it runs at every step, and the tool might break it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
Yes.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
I: Is it important to you that it compiles and run as often as possible.,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
"Yes, I need to run tests and in order for that to happen I need to compile it.",,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
fin,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,0,0,0,0,0,,0,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,
,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,